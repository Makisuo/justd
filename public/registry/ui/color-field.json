{
  "name": "color-field",
  "files": [
    {
      "name": "color-field.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport type { ColorFieldProps as ColorFieldPrimitiveProps, ValidationResult } from \"react-aria-components\"\nimport { ColorField as ColorFieldPrimitive } from \"react-aria-components\"\n\nimport { ColorPicker } from \"./color-picker\"\nimport { ColorSwatch } from \"./color-swatch\"\nimport { Description, FieldError, FieldGroup, Input, Label } from \"./field\"\nimport { composeTailwindRenderProps } from \"./primitive\"\n\ninterface ColorFieldProps extends ColorFieldPrimitiveProps {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: ValidationResult) => string)\n  placeholder?: string\n  prefix?: React.ReactNode\n  suffix?: React.ReactNode\n  isLoading?: boolean\n  enableColorPicker?: boolean\n}\n\nconst ColorField = ({\n  label,\n  description,\n  errorMessage,\n  placeholder,\n  prefix,\n  suffix,\n  isLoading,\n  enableColorPicker = true,\n  className,\n  ...props\n}: ColorFieldProps) => {\n  const value = props.value ?? props.defaultValue\n  return (\n    <ColorFieldPrimitive\n      {...props}\n      aria-label={props[\"aria-label\"] ?? \"Color field\"}\n      className={composeTailwindRenderProps(\n        className,\n        \"**:data-[slot=color-swatch]:-ml-0.5 group w-full flex flex-col gap-y-1\"\n      )}\n    >\n      {label && <Label>{label}</Label>}\n      <FieldGroup data-loading={isLoading ? \"true\" : undefined}>\n        {prefix ? (\n          <span data-slot=\"prefix\" className=\"atrs\">\n            {prefix}\n          </span>\n        ) : null}\n        <div className=\"flex w-full items-center\">\n          {value && (\n            <span className=\"ml-2\">\n              {enableColorPicker ? (\n                <ColorPicker onChange={props.onChange} defaultValue={value} />\n              ) : (\n                <ColorSwatch className=\"size-6\" color={value.toString(\"hex\")} />\n              )}\n            </span>\n          )}\n\n          <Input placeholder={placeholder} />\n        </div>\n        {suffix ? (\n          <span data-slot=\"suffix\" className=\"atrs ml-auto\">\n            {suffix}\n          </span>\n        ) : null}\n      </FieldGroup>\n      {description && <Description>{description}</Description>}\n      <FieldError>{errorMessage}</FieldError>\n    </ColorFieldPrimitive>\n  )\n}\n\nexport { ColorField }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/color-field.tsx"
}
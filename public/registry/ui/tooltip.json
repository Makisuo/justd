{
  "name": "tooltip",
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\n\nimport {\n  Button,\n  composeRenderProps,\n  OverlayArrow,\n  Tooltip as TooltipPrimitive,\n  type TooltipProps as TooltipPrimitiveProps,\n  TooltipTrigger\n} from \"react-aria-components\"\nimport type { VariantProps } from \"tailwind-variants\"\nimport { tv } from \"tailwind-variants\"\n\nconst tooltipStyles = tv({\n  base: [\"group rounded-lg [&_strong]:font-medium border px-3 py-2 text-sm will-change-transform dark:shadow-none\"],\n  variants: {\n    intent: {\n      default: \"bg-overlay text-overlay-fg [&_.arx]:fill-overlay [&_.arx]:stroke-border\",\n      inverse:\n        \"border-transparent bg-dark dark:[&_.text-muted-fg]:text-dark/70 [&_.text-muted-fg]:text-light/70 text-light dark:bg-light dark:text-dark dark:[&_.arx]:fill-light [&_.arx]:fill-dark [&_.arx]:stroke-transparent\"\n    },\n    isEntering: {\n      true: [\n        \"animate-in fade-in\",\n        \"data-[placement=left]:slide-in-from-right-1 data-[placement=right]:slide-in-from-left-1 data-[placement=top]:slide-in-from-bottom-1 data-[placement=bottom]:slide-in-from-top-1\"\n      ]\n    },\n    isExiting: {\n      true: [\n        \"animate-in fade-in direction-reverse\",\n        \"data-[placement=left]:slide-out-to-right-1 data-[placement=right]:slide-out-to-left-1 data-[placement=top]:slide-out-to-bottom-1 data-[placement=bottom]:slide-out-to-top-1\"\n      ]\n    }\n  },\n  defaultVariants: {\n    intent: \"default\"\n  }\n})\n\nconst Tooltip = (props: React.ComponentProps<typeof TooltipTrigger>) => <TooltipTrigger {...props} />\n\ninterface ContentProps extends Omit<TooltipPrimitiveProps, \"children\">, VariantProps<typeof tooltipStyles> {\n  showArrow?: boolean\n  children: React.ReactNode\n}\n\nconst Content = ({ offset = 10, showArrow = true, intent = \"default\", children, ...props }: ContentProps) => {\n  return (\n    <TooltipPrimitive\n      {...props}\n      offset={offset}\n      className={composeRenderProps(props.className, (className, renderProps) =>\n        tooltipStyles({\n          ...renderProps,\n          intent,\n          className\n        })\n      )}\n    >\n      {showArrow && (\n        <OverlayArrow>\n          <svg\n            width={12}\n            height={12}\n            viewBox=\"0 0 12 12\"\n            className=\"arx group-data-[placement=left]:-rotate-90 group-data-[placement=right]:rotate-90 group-data-[placement=bottom]:rotate-180 forced-colors:fill-[Canvas] forced-colors:stroke-[ButtonBorder]\"\n          >\n            <path d=\"M0 0 L6 6 L12 0\" />\n          </svg>\n        </OverlayArrow>\n      )}\n      {children}\n    </TooltipPrimitive>\n  )\n}\n\nTooltip.Trigger = Button\nTooltip.Content = Content\n\nexport { Tooltip }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/tooltip.tsx"
}
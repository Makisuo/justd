{
  "name": "textarea",
  "files": [
    {
      "name": "textarea.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport {\n  composeRenderProps,\n  TextArea as TextAreaPrimitive,\n  TextField as TextFieldPrimitive,\n  type TextFieldProps as TextFieldPrimitiveProps,\n  type ValidationResult\n} from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nimport { Description, FieldError, Label } from \"./field\"\nimport { composeTailwindRenderProps, focusStyles } from \"./primitive\"\n\nconst textareaStyles = tv({\n  extend: focusStyles,\n  base: \"w-full min-w-0 rounded-lg border border-input bg-bg px-2.5 py-2 text-base shadow-xs outline-hidden transition duration-200 data-disabled:opacity-50 sm:text-sm\"\n})\n\ninterface TextareaProps extends TextFieldPrimitiveProps {\n  autoSize?: boolean\n  label?: string\n  placeholder?: string\n  description?: string\n  errorMessage?: string | ((validation: ValidationResult) => string)\n  className?: string\n}\n\nconst Textarea = ({ className, placeholder, label, description, errorMessage, ...props }: TextareaProps) => {\n  return (\n    <TextFieldPrimitive {...props} className={composeTailwindRenderProps(className, \"group flex flex-col gap-y-1.5\")}>\n      {label && <Label>{label}</Label>}\n      <TextAreaPrimitive\n        placeholder={placeholder}\n        className={composeRenderProps(className, (className, renderProps) =>\n          textareaStyles({\n            ...renderProps,\n            className\n          })\n        )}\n      />\n      {description && <Description>{description}</Description>}\n      <FieldError>{errorMessage}</FieldError>\n    </TextFieldPrimitive>\n  )\n}\n\nexport { Textarea, type TextareaProps }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/textarea.tsx"
}
{
  "name": "primitive",
  "files": [
    {
      "name": "primitive.tsx",
      "content": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\n\nimport { type ClassValue, clsx } from \"clsx\"\nimport { composeRenderProps } from \"react-aria-components\"\nimport { twMerge } from \"tailwind-merge\"\nimport { tv } from \"tailwind-variants\"\n\nconst cn = (...inputs: ClassValue[]) => twMerge(clsx(inputs))\n\nfunction composeTailwindRenderProps<T>(\n  className: string | ((v: T) => string) | undefined,\n  tailwind: string,\n): string | ((v: T) => string) {\n  return composeRenderProps(className, (className) => twMerge(tailwind, className))\n}\n\nconst focusRing = tv({\n  variants: {\n    isFocused: { true: \"ring-4 ring-ring/20 outline-hidden\" },\n    isFocusVisible: { true: \"ring-4 ring-ring/20 outline-hidden\" },\n    isInvalid: { true: \"ring-4 ring-danger/20\" },\n  },\n})\n\nconst focusStyles = tv({\n  extend: focusRing,\n  variants: {\n    isFocused: { true: \"border-ring/70 forced-colors:border-[Highlight]\" },\n    isInvalid: { true: \"border-danger/70 forced-colors:border-[Mark]\" },\n  },\n})\n\nconst focusButtonStyles = tv({\n  base: \"outline outline-ring forced-colors:outline-[Highlight] outline-offset-2\",\n  variants: {\n    isFocusVisible: {\n      false: \"outline-0\",\n      true: \"outline-2\",\n    },\n  },\n})\n\nconst useMediaQuery = (query: string) => {\n  const [value, setValue] = useState(false)\n\n  useEffect(() => {\n    const onChange = (event: MediaQueryListEvent) => {\n      setValue(event.matches)\n    }\n\n    const result = matchMedia(query)\n    result.addEventListener(\"change\", onChange)\n    setValue(result.matches)\n\n    return () => result.removeEventListener(\"change\", onChange)\n  }, [query])\n\n  return value\n}\n\nexport {\n  cn,\n  composeTailwindRenderProps,\n  composeRenderProps as cr,\n  focusRing,\n  focusStyles,\n  focusButtonStyles,\n  useMediaQuery,\n}\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/primitive.tsx"
}
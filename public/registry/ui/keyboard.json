{
  "name": "keyboard",
  "files": [
    {
      "name": "keyboard.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Keyboard as KeyboardPrimitive } from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nconst keyboardStyles = tv({\n  slots: {\n    base: \"-mr-1 ml-auto hidden items-center gap-[0.25rem] px-1 lg:inline-flex\",\n    kbd: [\n      \"text-center font-sans capitalize text-muted-fg group-data-focused:text-fg forced-colors:group-data-focused:text-[HighlightText]\",\n      \"inline-grid min-h-5 min-w-5 place-content-center rounded font-sans text-[.75rem] uppercase text-fg ring-1 ring-fg/10 group-data-focused:opacity-60\"\n    ]\n  }\n})\n\nconst { base, kbd } = keyboardStyles()\n\ninterface KeyboardProps extends React.HTMLAttributes<HTMLElement> {\n  keys: string | string[]\n  classNames?: {\n    base?: string\n    kbd?: string\n  }\n}\n\nconst Keyboard = ({ keys, classNames, className, ...props }: KeyboardProps) => {\n  return (\n    <KeyboardPrimitive className={base({ className: classNames?.base ?? className })} {...props}>\n      {(Array.isArray(keys) ? keys : keys.split(\"\")).map((char, index) => (\n        <kbd key={index} className={kbd({ className: index > 0 && char.length > 1 ? \"pl-1\" : classNames?.kbd })}>\n          {char}\n        </kbd>\n      ))}\n    </KeyboardPrimitive>\n  )\n}\n\nexport { Keyboard, type KeyboardProps }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/keyboard.tsx"
}
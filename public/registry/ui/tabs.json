{
  "name": "tabs",
  "files": [
    {
      "name": "tabs.tsx",
      "content": "\"use client\"\n\nimport { useId } from \"react\"\n\nimport { LayoutGroup, motion } from \"motion/react\"\nimport {\n  TabList,\n  type TabListProps,\n  TabPanel,\n  type TabPanelProps,\n  Tab as TabPrimitive,\n  type TabProps,\n  Tabs as TabsPrimitive,\n  type TabsProps,\n  composeRenderProps,\n} from \"react-aria-components\"\nimport { twJoin } from \"tailwind-merge\"\nimport { tv } from \"tailwind-variants\"\n\nimport { cn, composeTailwindRenderProps } from \"./primitive\"\n\nconst tabsStyles = tv({\n  base: \"group/tabs flex gap-4 forced-color-adjust-none\",\n  variants: {\n    orientation: {\n      horizontal: \"flex-col\",\n      vertical: \"w-[800px] flex-row\",\n    },\n  },\n})\n\nconst Tabs = ({ className, ...props }: TabsProps) => {\n  return (\n    <TabsPrimitive\n      {...props}\n      className={composeRenderProps(className, (className, renderProps) =>\n        tabsStyles({\n          ...renderProps,\n          className,\n        }),\n      )}\n    />\n  )\n}\n\nconst tabListStyles = tv({\n  base: \"flex forced-color-adjust-none\",\n  variants: {\n    orientation: {\n      horizontal: \"flex-row gap-x-5 border-b border-border\",\n      vertical: \"flex-col items-start gap-y-4 border-l\",\n    },\n  },\n})\n\nconst List = <T extends object>(props: TabListProps<T>) => {\n  const id = useId()\n  return (\n    <LayoutGroup id={id}>\n      <TabList\n        {...props}\n        className={composeRenderProps(props.className, (className, renderProps) =>\n          tabListStyles({ ...renderProps, className }),\n        )}\n      />\n    </LayoutGroup>\n  )\n}\n\nconst tabStyles = tv({\n  base: [\n    \"relative flex whitespace-nowrap cursor-default items-center rounded-full text-sm font-medium outline-hidden transition data-hovered:text-fg *:data-[slot=icon]:size-4 *:data-[slot=icon]:mr-2\",\n    \"group-data-[orientation=vertical]/tabs:w-full group-data-[orientation=vertical]/tabs:py-0 group-data-[orientation=vertical]/tabs:pl-4 group-data-[orientation=vertical]/tabs:pr-2\",\n    \"group-data-[orientation=horizontal]/tabs:pb-3\",\n  ],\n  variants: {\n    isSelected: {\n      false: \"text-muted-fg\",\n      true: \"text-fg\",\n    },\n    isFocused: { false: \"ring-0\", true: \"text-fg\" },\n    isDisabled: {\n      true: \"text-muted-fg/50\",\n    },\n  },\n})\n\nconst Tab = ({ children, ...props }: TabProps) => {\n  return (\n    <TabPrimitive\n      {...props}\n      className={composeRenderProps(props.className, (_className, renderProps) =>\n        tabStyles({\n          ...renderProps,\n          className: twJoin(\"href\" in props && \"cursor-pointer\", _className),\n        }),\n      )}\n    >\n      {({ isSelected }) => (\n        <>\n          {children as React.ReactNode}\n          {isSelected && (\n            <motion.span\n              className={cn(\n                \"absolute rounded bg-fg\",\n                // horizontal\n                \"group-data-[orientation=horizontal]/tabs:-bottom-px group-data-[orientation=horizontal]/tabs:inset-x-0 group-data-[orientation=horizontal]/tabs:h-0.5 group-data-[orientation=horizontal]/tabs:w-full\",\n                // vertical\n                \"group-data-[orientation=vertical]/tabs:left-0 group-data-[orientation=vertical]/tabs:h-[calc(100%-10%)] group-data-[orientation=vertical]/tabs:w-0.5 group-data-[orientation=vertical]/tabs:transform\",\n              )}\n              layoutId=\"current-selected\"\n              transition={{ type: \"spring\", stiffness: 500, damping: 40 }}\n            />\n          )}\n        </>\n      )}\n    </TabPrimitive>\n  )\n}\n\nconst Panel = ({ className, ...props }: TabPanelProps) => {\n  return (\n    <TabPanel\n      {...props}\n      className={composeTailwindRenderProps(className, \"flex-1 text-fg text-sm data-focus-visible:outline-hidden\")}\n    />\n  )\n}\n\nTabs.List = List\nTabs.Tab = Tab\nTabs.Panel = Panel\n\nexport { Tabs }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/tabs.tsx"
}
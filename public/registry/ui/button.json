{
  "name": "button",
  "files": [
    {
      "name": "button.tsx",
      "content": "\"use client\"\n\nimport {\n  Button as ButtonPrimitive,\n  type ButtonProps as ButtonPrimitiveProps,\n  composeRenderProps,\n} from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nimport { focusButtonStyles } from \"./primitive\"\n\nconst buttonStyles = tv({\n  extend: focusButtonStyles,\n  base: [\n    \"kbt32x before:absolute after:absolute box-border relative no-underline isolate inline-flex items-center justify-center gap-x-2 border font-medium\",\n    \"forced-colors:[--button-icon:ButtonText] forced-colors:data-hovered:[--button-icon:ButtonText]\",\n    \"*:data-[slot=icon]:-mx-0.5 *:data-[slot=icon]:my-1 *:data-[slot=icon]:size-4 *:data-[slot=icon]:shrink-0 *:data-[slot=icon]:text-(--button-icon)\",\n  ],\n  variants: {\n    intent: {\n      primary: [\n        \"text-primary-fg [--button-bg:var(--color-primary)] [--button-border:var(--color-primary)] [--button-hover-overlay:var(--color-color-primary-fg)]/10\",\n        \"[--button-icon:var(--color-primary-fg)]/60 data-pressed:[--button-icon:var(--color-primary-fg)]/80 data-hovered:[--button-icon:var(--color-primary-fg)]/80\",\n      ],\n      secondary: [\n        \"text-secondary-fg [--button-bg:var(--color-secondary)] dark:[--button-bg:var(--color-secondary)] [--button-border:var(--color-secondary-fg)]/10 [--button-hover-overlay:var(--color-secondary-fg)]/[2.5%] data-data-pressed:[--button-border:var(--color-secondary-fg)]/15 data-hovered:[--button-border:var(--color-secondary-fg)]/15\",\n        \"[--button-icon:var(--color-secondary-fg)]/60 data-pressed:[--button-icon:var(--color-secondary-fg)] data-hovered:[--button-icon:var(--color-secondary-fg)]\",\n      ],\n      warning: [\n        \"text-warning-fg outline-warning [--button-bg:var(--color-warning)] [--button-border:var(--color-warning)] [--button-hover-overlay:var(--color-warning-fg)]/10\",\n        \"[--button-icon:var(--color-warning-fg)]/60 data-pressed:[--button-icon:var(--color-warning-fg)]/80 data-hovered:[--button-icon:var(--color-warning-fg)]/80\",\n      ],\n      danger: [\n        \"text-danger-fg outline-danger [--button-bg:var(--color-danger)] [--button-border:var(--color-danger)] [--button-hover-overlay:var(--color-danger-fg)]/10\",\n        \"[--button-icon:var(--color-white)]/60 data-pressed:[--button-icon:var(--color-danger-fg)]/80 data-hovered:[--button-icon:var(--color-danger-fg)]/80\",\n      ],\n    },\n    appearance: {\n      solid: [\n        \"border-transparent bg-(--button-border)\",\n        \"before:inset-0 before:-z-10 before:bg-(--button-bg) before:shadow-sm data-disabled:before:shadow-none\",\n        \"after:shadow-[shadow:inset_0_1px_theme(--color-white/15%)] data-pressed:after:bg-(--button-hover-overlay) data-hovered:after:bg-(--button-hover-overlay) data-disabled:after:shadow-none after:inset-0 after:-z-10\",\n        \"dark:after:-inset-px dark:before:hidden dark:border-white/5 dark:bg-(--button-bg)\",\n      ],\n      outline: [\n        \"border-border data-hovered:border-secondary-fg/10 data-pressed:border-secondary-fg/10 data-hovered:bg-secondary/90 text-secondary-fg\",\n        \"[--button-icon:var(--color-secondary-fg)]/50 data-hovered:[--button-icon:var(--color-fg)]\",\n        \"data-pressed:bg-secondary/90 data-pressed:[--button-icon:var(--color-secondary-fg)]\",\n      ],\n      plain: [\n        \"border-transparent text-secondary-fg [--button-icon:var(--color-secondary-fg)]/50\",\n        \"data-hovered:[--button-icon:var(--color-secondary-fg)] data-hovered:bg-secondary\",\n        \"data-pressed:[--button-icon:var(--color-secondary-fg)] data-pressed:bg-secondary\",\n      ],\n    },\n    size: {\n      \"extra-small\":\n        \"h-8 px-[calc(calc(var(--spacing)*3)-1px)] py-[calc(calc(var(--spacing)*1)-1px)] text-xs/4 lg:text-[0.800rem]/4\",\n      small: \"h-9 px-[calc(calc(var(--spacing)*4)-1px)] py-[calc(calc(var(--spacing)*1.5)-1px)] text-sm/5 sm:text-sm/5\",\n      medium: \"h-10 px-[calc(calc(var(--spacing)*4)-1px)] py-[calc(calc(var(--spacing)*2)-1px)] text-base sm:text-sm/6\",\n      large:\n        \"h-10 *:data-[slot=icon]:mx-[-3px] sm:h-11 px-[calc(calc(var(--spacing)*4)-1px)] sm:px-[calc(calc(var(--spacing)*5)-1px)] py-[calc(calc(var(--spacing)*2.5)-1px)] text-base lg:text-base/7 sm:*:data-[slot=icon]:size-5\",\n      \"square-petite\": \"size-9 shrink-0 **:data-[slot=icon]:text-current\",\n    },\n    shape: {\n      square:\n        \"rounded-lg before:rounded-[calc(var(--radius-lg)-1px)] after:rounded-[calc(var(--radius-lg)-1px)] dark:after:rounded-lg\",\n      circle: \"rounded-full before:rounded-full after:rounded-full\",\n    },\n    isDisabled: {\n      false: \"forced-colors:data-disabled:text-[GrayText] cursor-pointer\",\n      true: \"cursor-default opacity-60 forced-colors:data-disabled:text-[GrayText]\",\n    },\n    isPending: {\n      true: \"cursor-default\",\n    },\n  },\n  defaultVariants: {\n    intent: \"primary\",\n    appearance: \"solid\",\n    size: \"medium\",\n    shape: \"square\",\n  },\n})\n\ninterface ButtonProps extends ButtonPrimitiveProps {\n  intent?: \"primary\" | \"secondary\" | \"danger\" | \"warning\"\n  size?: \"medium\" | \"large\" | \"square-petite\" | \"extra-small\" | \"small\"\n  shape?: \"square\" | \"circle\"\n  appearance?: \"solid\" | \"outline\" | \"plain\"\n  ref?: React.Ref<HTMLButtonElement>\n}\n\nconst Button = ({ className, intent, appearance, size, shape, ref, ...props }: ButtonProps) => {\n  return (\n    <ButtonPrimitive\n      ref={ref}\n      {...props}\n      className={composeRenderProps(className, (className, renderProps) =>\n        buttonStyles({\n          ...renderProps,\n          intent,\n          appearance,\n          size,\n          shape,\n          className,\n        }),\n      )}\n    >\n      {(values) => <>{typeof props.children === \"function\" ? props.children(values) : props.children}</>}\n    </ButtonPrimitive>\n  )\n}\n\nexport { Button, ButtonPrimitive, buttonStyles, type ButtonProps }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/button.tsx"
}
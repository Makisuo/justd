{
  "name": "note",
  "files": [
    {
      "name": "note.tsx",
      "content": "import { IconCircleCheckFill, IconCircleExclamationFill, IconCircleInfoFill } from \"justd-icons\"\nimport { type VariantProps, tv } from \"tailwind-variants\"\n\nconst noteStyles = tv({\n  base: [\n    \"w-full p-4 sm:text-sm/6 overflow-hidden rounded-lg inset-ring-1 inset-ring-current/10\",\n    \"[&_a]:underline data-hovered:[&_a]:underline\",\n  ],\n  variants: {\n    intent: {\n      default: [\n        \"border-border [&_a]:text-secondary-fg text-secondary-fg bg-secondary/50 **:data-[slot=icon]:text-secondary-fg\",\n        \"dark:[&_a]:text-secondary-fg dark:**:data-[slot=icon]:text-secondary-fg\",\n      ],\n      info: [\n        \"bg-sky-500/15 text-sky-700 group-data-hovered:bg-sky-500/25 dark:bg-sky-500/10 dark:text-sky-300 dark:group-data-hovered:bg-sky-500/20\",\n      ],\n      warning:\n        \"bg-amber-400/20 text-amber-700 group-data-hovered:bg-amber-400/30 dark:bg-amber-400/10 dark:text-amber-400 dark:group-data-hovered:bg-amber-400/15\",\n      danger:\n        \"bg-red-500/15 text-red-700 group-data-hovered:bg-red-500/25 dark:bg-red-500/10 dark:text-red-400 dark:group-data-hovered:bg-red-500/20\",\n      success: [\n        \"border-success/20 [&_a]:text-emerald-600 text-emerald-900 bg-success/50 **:data-[slot=icon]:text-success leading-4\",\n        \"dark:bg-success/10 dark:text-emerald-200 dark:[&_a]:text-emerald-50 dark:**:data-[slot=icon]:text-emerald-400\",\n      ],\n    },\n  },\n  defaultVariants: {\n    intent: \"default\",\n  },\n})\n\ninterface NoteProps extends React.HtmlHTMLAttributes<HTMLDivElement>, VariantProps<typeof noteStyles> {\n  indicator?: boolean\n}\n\nconst Note = ({ indicator = true, intent = \"default\", className, ...props }: NoteProps) => {\n  const iconMap: Record<string, React.ElementType | null> = {\n    info: IconCircleInfoFill,\n    warning: IconCircleExclamationFill,\n    danger: IconCircleExclamationFill,\n    success: IconCircleCheckFill,\n    default: null,\n  }\n\n  const IconComponent = iconMap[intent] || null\n\n  return (\n    <div className={noteStyles({ intent, className })} {...props}>\n      <div className=\"flex items-start grow\">\n        {IconComponent && indicator && (\n          <div className=\"shrink-0\">\n            <IconComponent className=\"mr-3 leading-loose rounded-full ring-4 size-5 ring-current/30\" />\n          </div>\n        )}\n        <div>{props.children}</div>\n      </div>\n    </div>\n  )\n}\n\nexport { Note, type NoteProps }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/note.tsx"
}
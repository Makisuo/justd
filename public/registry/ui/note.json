{
  "name": "note",
  "files": [
    {
      "name": "note.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { IconCircleCheck, IconCircleInfo, IconTriangleInfo } from \"justd-icons\"\nimport { Text } from \"react-aria-components\"\nimport { tv, type VariantProps } from \"tailwind-variants\"\n\nconst noteStyles = tv({\n  base: [\n    \"my-4 px-4 [&_.nd]:block [&_.nd]:text-sm py-4 leading-4 overflow-hidden rounded-lg border [&_strong]:font-semibold\",\n    \"**:data-[slot=icon]:size-5 **:data-[slot=icon]:shrink-0 [&_a]:underlinedata-hovered:[&_a]:underline\"\n  ],\n  variants: {\n    intent: {\n      primary: [\"border-primary/35 [&_a]:text-primary text-primary bg-primary/10 leading-4\"],\n      secondary: [\n        \"border-border [&_a]:text-secondary-fg text-secondary-fg bg-secondary/50 **:data-[slot=icon]:text-secondary-fg\",\n        \"dark:[&_a]:text-secondary-fg dark:**:data-[slot=icon]:text-secondary-fg\"\n      ],\n      info: [\"border-info/20 text-info bg-info/5 dark:bg-info/10 leading-4\"],\n      warning: \"border-warning/50 dark:border-warning/25 bg-warning/5 text-warning-fg dark:text-warning\",\n      danger: \"border-danger/30 bg-danger/5 dark:bg-danger/10 text-danger\",\n      success: [\n        \"border-emerald-500/20 [&_a]:text-emerald-600 text-emerald-900 bg-emerald-50/50 **:data-[slot=icon]:text-emerald-600 leading-4\",\n        \"dark:bg-emerald-500/10 dark:text-emerald-200 dark:[&_a]:text-emerald-50 dark:**:data-[slot=icon]:text-emerald-400\"\n      ]\n    }\n  }\n})\n\ninterface NoteProps extends React.HtmlHTMLAttributes<HTMLDivElement>, VariantProps<typeof noteStyles> {\n  hideIndicator?: boolean\n}\n\nconst Note = ({ hideIndicator = false, intent = \"info\", className, ...props }: NoteProps) => {\n  return (\n    <div className={noteStyles({ intent, className })} {...props}>\n      <div className=\"flex items-start gap-x-2.5\">\n        {!hideIndicator && (\n          <div className=\"w-5 shrink-0 mt-px\">\n            {[\"info\", \"primary\", \"secondary\"].includes(intent) ? (\n              <IconCircleInfo />\n            ) : intent === \"success\" ? (\n              <IconCircleCheck />\n            ) : (\n              <IconTriangleInfo />\n            )}\n          </div>\n        )}\n        <Text slot=\"description\" {...props} className=\"nd\">\n          {props.children}\n        </Text>\n      </div>\n    </div>\n  )\n}\n\nexport { Note, type NoteProps }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/note.tsx"
}
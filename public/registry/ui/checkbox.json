{
  "name": "checkbox",
  "files": [
    {
      "name": "checkbox.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { IconCheck, IconMinus } from \"justd-icons\"\nimport type {\n  CheckboxGroupProps as CheckboxGroupPrimitiveProps,\n  CheckboxProps as CheckboxPrimitiveProps,\n  ValidationResult\n} from \"react-aria-components\"\nimport {\n  Checkbox as CheckboxPrimitive,\n  CheckboxGroup as CheckboxGroupPrimitive,\n  composeRenderProps\n} from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nimport { Description, FieldError, Label } from \"./field\"\nimport { cn, composeTailwindRenderProps } from \"./primitive\"\n\ninterface CheckboxGroupProps extends CheckboxGroupPrimitiveProps {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: ValidationResult) => string)\n}\n\nconst CheckboxGroup = ({ className, ...props }: CheckboxGroupProps) => {\n  return (\n    <CheckboxGroupPrimitive {...props} className={composeTailwindRenderProps(className, \"flex flex-col gap-y-2\")}>\n      <Label>{props.label}</Label>\n      <>{props.children as React.ReactNode}</>\n      {props.description && <Description className=\"block\">{props.description}</Description>}\n      <FieldError>{props.errorMessage}</FieldError>\n    </CheckboxGroupPrimitive>\n  )\n}\n\nconst checkboxStyles = tv({\n  base: \"group flex items-center gap-2 text-sm transition\",\n  variants: {\n    isDisabled: {\n      true: \"opacity-50\"\n    }\n  }\n})\n\nconst boxStyles = tv({\n  base: \"flex size-4 *:data-[slot=icon]:size-3 shrink-0 items-center justify-center rounded border border-input text-bg transition\",\n  variants: {\n    isSelected: {\n      false: \"bg-secondary/40\",\n      true: [\n        \"border-primary/70 bg-primary text-primary-fg\",\n        \"group-data-invalid:border-danger/70 group-data-invalid:bg-danger group-data-invalid:text-danger-fg\"\n      ]\n    },\n    isFocused: {\n      true: [\n        \"border-primary/70 ring-4 ring-primary/20\",\n        \"group-data-invalid:border-danger/70 group-data-invalid:text-danger-fg group-data-invalid:ring-danger/20\"\n      ]\n    },\n    isInvalid: {\n      true: \"border-danger/70 bg-danger/20 text-danger-fg ring-danger/20\"\n    }\n  }\n})\n\ninterface CheckboxProps extends CheckboxPrimitiveProps {\n  description?: string\n  label?: string\n}\n\nconst Checkbox = ({ className, ...props }: CheckboxProps) => {\n  return (\n    <CheckboxPrimitive\n      {...props}\n      className={composeRenderProps(className, (className, renderProps) =>\n        checkboxStyles({ ...renderProps, className })\n      )}\n    >\n      {({ isSelected, isIndeterminate, ...renderProps }) => (\n        <div className={cn(\"flex gap-x-2\", props.description ? \"items-start\" : \"items-center\")}>\n          <div\n            className={boxStyles({\n              ...renderProps,\n              isSelected: isSelected || isIndeterminate,\n              className: props.description ? \"mt-1\" : \"mt-px\"\n            })}\n          >\n            {isIndeterminate ? <IconMinus /> : isSelected ? <IconCheck /> : null}\n          </div>\n\n          <div className=\"flex flex-col gap-1\">\n            <>\n              {props.label ? <Label>{props.label}</Label> : (props.children as React.ReactNode)}\n              {props.description && <Description>{props.description}</Description>}\n            </>\n          </div>\n        </div>\n      )}\n    </CheckboxPrimitive>\n  )\n}\n\nexport { Checkbox, CheckboxGroup }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/checkbox.tsx"
}
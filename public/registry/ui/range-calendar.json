{
  "name": "range-calendar",
  "files": [
    {
      "name": "range-calendar.tsx",
      "content": "\"use client\"\n\nimport type { DateValue, RangeCalendarProps as RangeCalendarPrimitiveProps } from \"react-aria-components\"\nimport {\n  CalendarCell,\n  CalendarGrid,\n  CalendarGridBody,\n  RangeCalendar as RangeCalendarPrimitive,\n  Text\n} from \"react-aria-components\"\nimport { twJoin } from \"tailwind-merge\"\nimport { tv } from \"tailwind-variants\"\n\nimport { Calendar } from \"./calendar\"\nimport { composeTailwindRenderProps, focusRing } from \"./primitive\"\n\nconst cellRangeStyles = tv({\n  extend: focusRing,\n  base: \"flex h-full w-full items-center tabular-nums justify-center rounded-full forced-color-adjust-none\",\n  variants: {\n    selectionState: {\n      none: \"group-hover:bg-secondary-fg/15 group-data-pressed:bg-secondary-fg/20 forced-colors:group-data-pressed:bg-[Highlight]\",\n      middle: [\n        \"group-hover:bg-primary/20 forced-colors:group-hover:bg-[Highlight]\",\n        \"group-data-invalid:group-hover:bg-red-200 group-data-invalid:text-red-500 dark:group-data-invalid:group-hover:bg-red-900 forced-colors:group-data-invalid:group-hover:bg-[Mark]\",\n        \"group-data-pressed:bg-primary forced-colors:text-[HighlightText] forced-colors:group-data-pressed:bg-[Highlight]\",\n        \"group-data-invalid:group-data-pressed:bg-red-300 dark:group-data-invalid:group-data-pressed:bg-red-800 forced-colors:group-data-invalid:group-data-pressed:bg-[Mark]\"\n      ],\n      cap: \"bg-primary text-primary-fg group-data-invalid:bg-danger group-data-invalid:text-danger-fg forced-colors:bg-[Highlight] forced-colors:text-[HighlightText] forced-colors:group-data-invalid:bg-[Mark]\"\n    },\n    isDisabled: {\n      true: \"text-muted-fg/70 forced-colors:text-[GrayText]\"\n    }\n  }\n})\n\ninterface RangeCalendarProps<T extends DateValue> extends Omit<RangeCalendarPrimitiveProps<T>, \"visibleDuration\"> {\n  errorMessage?: string\n}\n\nconst RangeCalendar = <T extends DateValue>({ errorMessage, className, ...props }: RangeCalendarProps<T>) => {\n  return (\n    <RangeCalendarPrimitive\n      className={composeTailwindRenderProps(className, \"max-w-[17.5rem] sm:max-w-[15.8rem]\")}\n      {...props}\n    >\n      <Calendar.Header />\n      <CalendarGrid className=\"[&_td]:border-collapse [&_td]:px-0\">\n        <Calendar.GridHeader />\n        <CalendarGridBody>\n          {(date) => (\n            <CalendarCell\n              date={date}\n              className={twJoin([\n                \"group size-10 lg:size-9 cursor-default lg:text-sm outline outline-0 outside-month:text-zinc-300 selection-start:rounded-s-full selection-end:rounded-e-full forced-colors:selected:bg-[Highlight] forced-colors:invalid:selected:bg-[Mark]\",\n                \"selected:bg-primary/10 dark:selected:bg-primary/15 selected:text-primary forced-colors:selected:text-[HighlightText]\",\n                \"[td:first-child_&]:rounded-s-full [td:last-child_&]:rounded-e-full\",\n                \"invalid:selected:bg-red-100 dark:invalid:selected:bg-red-700/30\"\n              ])}\n            >\n              {({ formattedDate, isSelected, isSelectionStart, isSelectionEnd, ...renderProps }) => (\n                <span\n                  className={cellRangeStyles({\n                    ...renderProps,\n                    selectionState:\n                      isSelected && (isSelectionStart || isSelectionEnd) ? \"cap\" : isSelected ? \"middle\" : \"none\"\n                  })}\n                >\n                  {formattedDate}\n                </span>\n              )}\n            </CalendarCell>\n          )}\n        </CalendarGridBody>\n      </CalendarGrid>\n      {errorMessage && (\n        <Text slot=\"errorMessage\" className=\"text-sm text-danger\">\n          {errorMessage}\n        </Text>\n      )}\n    </RangeCalendarPrimitive>\n  )\n}\n\nexport { RangeCalendar }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/range-calendar.tsx"
}
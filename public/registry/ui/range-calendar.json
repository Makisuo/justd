{
  "name": "range-calendar",
  "files": [
    {
      "name": "range-calendar.tsx",
      "content": "\"use client\"\n\nimport type { DateValue, RangeCalendarProps as RangeCalendarPrimitiveProps } from \"react-aria-components\"\nimport {\n  CalendarCell,\n  CalendarGrid,\n  CalendarGridBody,\n  RangeCalendar as RangeCalendarPrimitive,\n  Text,\n} from \"react-aria-components\"\nimport { twJoin } from \"tailwind-merge\"\nimport { tv } from \"tailwind-variants\"\n\nimport { Calendar } from \"./calendar\"\nimport { composeTailwindRenderProps, focusRing } from \"./primitive\"\n\nconst cell = tv({\n  extend: focusRing,\n  base: \"flex size-full items-center tabular-nums justify-center rounded-lg forced-color-adjust-none\",\n  variants: {\n    selectionState: {\n      none: \"group-data-hovered/calendar-cell:bg-secondary-fg/15 group-data-pressed/calendar-cell:bg-secondary-fg/20 forced-colors:group-data-pressed/calendar-cell:bg-[Highlight]\",\n      middle: [\n        \"group-data-hovered/calendar-cell:bg-(--cell) forced-colors:group-data-hovered/calendar-cell:bg-[Highlight]\",\n        \"group-data-pressed/calendar-cell:bg-(--cell) forced-colors:text-[HighlightText] forced-colors:group-data-pressed/calendar-cell:bg-[Highlight]\",\n        \"group-data-invalid/calendar-cell:group-data-pressed/calendar-cell:bg-red-300 dark:group-data-invalid/calendar-cell:group-data-pressed/calendar-cell:bg-red-900 forced-colors:group-data-invalid/calendar-cell:group-data-pressed/calendar-cell:bg-[Mark]\",\n        \"group-data-invalid:group-data-hovered/calendar-cell:bg-red-300 group-data-invalid/calendar-cell:text-red-500 dark:group-data-invalid:group-data-hovered/calendar-cell:bg-red-900 forced-colors:group-data-invalid:group-data-hovered/calendar-cell:bg-[Mark]\",\n      ],\n      cap: \"bg-primary text-primary-fg group-data-invalid/calendar-cell:bg-danger group-data-invalid/calendar-cell:text-danger-fg forced-colors:bg-[Highlight] forced-colors:text-[HighlightText] forced-colors:group-data-invalid/calendar-cell:bg-[Mark]\",\n    },\n    isDisabled: {\n      true: \"opacity-50 forced-colors:text-[GrayText]\",\n    },\n  },\n})\n\ninterface RangeCalendarProps<T extends DateValue> extends Omit<RangeCalendarPrimitiveProps<T>, \"visibleDuration\"> {\n  errorMessage?: string\n}\n\nconst RangeCalendar = <T extends DateValue>({ errorMessage, className, ...props }: RangeCalendarProps<T>) => {\n  return (\n    <RangeCalendarPrimitive\n      className={composeTailwindRenderProps(className, \"max-w-[17.5rem] sm:max-w-[15.8rem]\")}\n      {...props}\n    >\n      <Calendar.Header />\n      <CalendarGrid className=\"**:[td]:px-0 **:[td]:py-[1.5px]\">\n        <Calendar.GridHeader />\n        <CalendarGridBody>\n          {(date) => (\n            <CalendarCell\n              date={date}\n              className={twJoin([\n                \"[--cell-fg:var(--color-primary)] [--cell:color-mix(in_oklab,var(--color-primary)_10%,white_90%)]\",\n                \"dark:[--cell:color-mix(in_oklab,var(--color-primary)_30%,black_45%)] dark:[--cell-fg:color-mix(in_oklab,var(--color-primary)_80%,white_20%)]\",\n                \"group/calendar-cell size-10 cursor-default outline-hidden [line-height:2.286rem] data-selection-start:rounded-s-lg data-selection-end:rounded-e-lg data-outside-month:text-muted-fg sm:text-sm lg:size-9\",\n                \"data-selected:bg-(--cell)/70 data-selected:text-(--cell-fg) dark:data-selected:bg-(--cell)\",\n                \"data-invalid:data-selected:bg-red-100 dark:data-invalid:data-selected:bg-red-700/30\",\n                \"[td:first-child_&]:rounded-s-lg [td:last-child_&]:rounded-e-lg\",\n                \"forced-colors:data-invalid:data-selected:bg-[Mark] forced-colors:data-selected:bg-[Highlight] forced-colors:data-selected:text-[HighlightText]\",\n              ])}\n            >\n              {({ formattedDate, isSelected, isSelectionStart, isSelectionEnd, isFocusVisible, isDisabled }) => (\n                <span\n                  className={cell({\n                    selectionState:\n                      isSelected && (isSelectionStart || isSelectionEnd) ? \"cap\" : isSelected ? \"middle\" : \"none\",\n                    isFocusVisible,\n                    isDisabled,\n                  })}\n                >\n                  {formattedDate}\n                </span>\n              )}\n            </CalendarCell>\n          )}\n        </CalendarGridBody>\n      </CalendarGrid>\n      {errorMessage && (\n        <Text slot=\"errorMessage\" className=\"text-sm text-danger\">\n          {errorMessage}\n        </Text>\n      )}\n    </RangeCalendarPrimitive>\n  )\n}\n\nexport { RangeCalendar }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/range-calendar.tsx"
}
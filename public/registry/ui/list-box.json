{
  "name": "list-box",
  "files": [
    {
      "name": "list-box.tsx",
      "content": "\"use client\"\n\nimport { IconCheck, IconHamburger } from \"justd-icons\"\nimport type { ListBoxItemProps, ListBoxProps } from \"react-aria-components\"\nimport { ListBoxItem, ListBox as ListBoxPrimitive, composeRenderProps } from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nimport { DropdownItemDetails, DropdownSection } from \"./dropdown\"\nimport { cn } from \"./primitive\"\n\nconst listBoxStyles = tv({\n  base: \"flex max-h-96 [&::-webkit-scrollbar]:size-0.5 [scrollbar-width:thin] w-full gap-y-1 min-w-56 flex-col overflow-y-auto rounded-xl border p-1 shadow-lg outline-hidden\",\n})\n\nconst ListBox = <T extends object>({ className, ...props }: ListBoxProps<T>) => (\n  <ListBoxPrimitive\n    {...props}\n    className={composeRenderProps(className, (className, renderProps) => listBoxStyles({ ...renderProps, className }))}\n  />\n)\n\nconst listBoxItemStyles = tv({\n  base: \"lbi cursor-pointer relative rounded-[calc(var(--radius-lg)-1px)] p-2 text-base outline-hidden sm:text-sm\",\n  variants: {\n    isFocusVisible: {\n      true: \"bg-secondary text-accent-fg text-accent-fg/70\",\n    },\n    isHovered: {\n      true: \"bg-accent [&:hover_[slot=label]]:text-accent-fg [&:hover_[slot=description]]:text-accent-fg/70 text-accent-fg [&_.text-muted-fg]:text-accent-fg/80\",\n    },\n    isFocused: {\n      true: \"**:data-[slot=icon]:text-accent-fg **:data-[slot=label]:text-accent-fg [&_.text-muted-fg]:text-accent-fg/80 bg-accent text-accent-fg\",\n    },\n    isSelected: {\n      true: \"**:data-[slot=icon]:text-accent-fg **:data-[slot=label]:text-accent-fg [&_.text-muted-fg]:text-accent-fg/80 bg-accent text-accent-fg\",\n    },\n    isDragging: { true: \"cursor-grabbing bg-secondary text-secondary-fg\" },\n    isDisabled: {\n      true: \"opacity-70 cursor-default text-muted-fg\",\n    },\n  },\n})\n\ninterface ItemProps<T extends object> extends ListBoxItemProps<T> {\n  className?: string\n}\n\nconst Item = <T extends object>({ children, className, ...props }: ItemProps<T>) => {\n  const textValue = typeof children === \"string\" ? children : undefined\n\n  return (\n    <ListBoxItem\n      textValue={textValue}\n      {...props}\n      className={composeRenderProps(className, (className, renderProps) =>\n        listBoxItemStyles({\n          ...renderProps,\n          className,\n        }),\n      )}\n    >\n      {(values) => (\n        <div className=\"flex gap-2 items-center\">\n          <>\n            {values.allowsDragging && (\n              <IconHamburger\n                className={cn(\n                  \"size-4 shrink-0 text-muted-fg transition\",\n                  values.isFocused && \"text-fg\",\n                  values.isDragging && \"text-fg\",\n                  values.isSelected && \"text-accent-fg/70\",\n                )}\n              />\n            )}\n            <div className=\"flex flex-col\">\n              {typeof children === \"function\" ? children(values) : children}\n\n              {values.isSelected && (\n                <span className=\"absolute right-2 top-3 lg:top-2.5 animate-in\">\n                  <IconCheck />\n                </span>\n              )}\n            </div>\n          </>\n        </div>\n      )}\n    </ListBoxItem>\n  )\n}\n\ntype ListBoxPickerProps<T> = ListBoxProps<T>\n\nconst ListBoxPicker = <T extends object>({ className, ...props }: ListBoxPickerProps<T>) => {\n  return <ListBoxPrimitive className={cn(\"max-h-72 overflow-auto p-1 outline-hidden\", className)} {...props} />\n}\n\nconst Section = ({ className, ...props }: React.ComponentProps<typeof DropdownSection>) => {\n  return <DropdownSection className={cn(className, \"[&_.lbi:last-child]:-mb-1.5 gap-y-1\")} {...props} />\n}\n\nListBox.Section = Section\nListBox.ItemDetails = DropdownItemDetails\nListBox.Item = Item\nListBox.Picker = ListBoxPicker\n\nexport { ListBox, listBoxStyles, type ListBoxPickerProps }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/list-box.tsx"
}
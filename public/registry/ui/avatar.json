{
  "name": "avatar",
  "files": [
    {
      "name": "avatar.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\n\nimport { tv, type VariantProps } from \"tailwind-variants\"\n\nimport { VisuallyHidden } from \"./visually-hidden\"\n\nconst avatarGroupStyles = tv({\n  base: \"flex items-center justify-center -space-x-2 **:data-[slot=avatar]:ring-2 **:data-[slot=avatar]:ring-bg\"\n})\n\ninterface AvatarGroupProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof avatarGroupStyles> {\n  children: React.ReactNode\n}\n\nconst AvatarGroup = ({ className, ...props }: AvatarGroupProps) => {\n  return <div className={avatarGroupStyles({ className })} {...props} />\n}\n\nconst avatarStyles = tv({\n  base: [\n    \"grid relative place-content-center shrink-0 bg-secondary align-middle [--avatar-radius:20%] [--ring-opacity:20%] *:col-start-1 *:row-start-1\",\n    \"loo2ppvkxrcah38e outline outline-1 -outline-offset-1 outline-fg/(--ring-opacity)\"\n  ],\n  variants: {\n    size: {\n      \"extra-small\": \"size-5\",\n      small: \"size-6\",\n      medium: \"size-8\",\n      large: \"size-10\"\n    },\n    shape: {\n      square: \"rounded-(--avatar-radius) *:rounded-(--avatar-radius) **:data-[slot=badge]:rounded-full\",\n      circle: \"rounded-full *:rounded-full\"\n    }\n  },\n\n  defaultVariants: {\n    shape: \"circle\",\n    size: \"medium\"\n  }\n})\n\ntype Status = \"away\" | \"online\" | \"offline\" | \"dnd\" | \"idle\"\n\ninterface AvatarProps extends React.ComponentPropsWithoutRef<\"span\">, VariantProps<typeof avatarStyles> {\n  src?: string | null\n  initials?: string\n  alt?: string\n  status?: Status\n  className?: string\n}\n\nconst Avatar = ({\n  status,\n  src = null,\n  initials,\n  alt = \"\",\n  children,\n  className,\n  shape,\n  size,\n  ...props\n}: AvatarProps) => {\n  const badgeId = React.useId()\n  const ariaLabelledby = [badgeId, children ? badgeId : \"\"].join(\" \")\n  return (\n    <span\n      aria-labelledby={ariaLabelledby}\n      data-slot=\"avatar\"\n      {...props}\n      className={avatarStyles({ shape, size, className })}\n    >\n      {initials && (\n        <svg\n          className=\"select-none fill-current text-[48px] font-medium uppercase\"\n          viewBox=\"0 0 100 100\"\n          aria-hidden={alt ? undefined : \"true\"}\n        >\n          {alt && <title>{alt}</title>}\n          <text x=\"50%\" y=\"50%\" alignmentBaseline=\"middle\" dominantBaseline=\"middle\" textAnchor=\"middle\" dy=\".125em\">\n            {initials}\n          </text>\n        </svg>\n      )}\n      {src && <img src={src} alt={alt} />}\n      {status && <AvatarBadge size={size} status={status} aria-label={status} />}\n    </span>\n  )\n}\n\ntype AvatarBadgeProps = {\n  className?: string\n  status?: Status\n  fillBackground?: boolean\n  \"aria-label\": string\n  size?: AvatarProps[\"size\"]\n}\n\nconst avatarBadgeStyles = tv({\n  base: [\"size-3 z-10 absolute bottom-0 right-0 rounded-full ring-[1.5px] ring-bg bg-bg\"],\n  variants: {\n    size: {\n      \"extra-small\": \"size-[0.360rem] translate-x-[0%] translate-y-[0%]\",\n      small: \"size-1.5 translate-x-[0%] translate-y-[0%]\",\n      medium: \"size-2 translate-x-[5%] translate-y-[5%]\",\n      large: \"size-2.5 translate-x-[5%] translate-y-[5%]\"\n    },\n    status: {\n      away: \"bg-danger\",\n      online: \"bg-success\",\n      offline: \"bg-muted-fg\",\n      dnd: \"bg-warning\",\n      idle: \"bg-muted-fg\"\n    }\n  },\n  defaultVariants: {\n    size: \"medium\",\n    status: \"idle\"\n  }\n})\n\nconst AvatarBadge = ({ size, className, status, ...props }: AvatarBadgeProps) => {\n  return (\n    <span data-slot=\"badge\" {...props} aria-hidden className={avatarBadgeStyles({ size, status, className })}>\n      <VisuallyHidden>{status}</VisuallyHidden>\n    </span>\n  )\n}\n\nexport { Avatar, AvatarGroup }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/avatar.tsx"
}
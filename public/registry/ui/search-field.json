{
  "name": "search-field",
  "files": [
    {
      "name": "search-field.tsx",
      "content": "\"use client\"\n\nimport { IconSearch, IconX } from \"justd-icons\"\nimport {\n  SearchField as SearchFieldPrimitive,\n  type SearchFieldProps as SearchFieldPrimitiveProps,\n  type ValidationResult\n} from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nimport { Button } from \"./button\"\nimport { Description, FieldError, FieldGroup, Input, Label } from \"./field\"\nimport { Loader } from \"./loader\"\nimport { composeTailwindRenderProps } from \"./primitive\"\n\nconst searchFieldStyles = tv({\n  slots: {\n    base: \"group flex min-w-10 flex-col gap-y-1.5\",\n    searchIcon:\n      \"ml-2.5 size-4 shrink-0 text-muted-fg group-data-disabled:text-muted-fg forced-colors:text-[ButtonText] forced-colors:group-data-disabled:text-[GrayText]\",\n    clearButton: [\n      \"mr-1 size-8 text-muted-fg group-data-empty:invisible data-pressed:bg-transparent data-hovered:bg-transparent data-hovered:text-fg data-pressed:text-fg\"\n    ],\n    input: \"[&::-webkit-search-cancel-button]:hidden\"\n  }\n})\n\nconst { base, searchIcon, clearButton, input } = searchFieldStyles()\n\ninterface SearchFieldProps extends SearchFieldPrimitiveProps {\n  label?: string\n  placeholder?: string\n  description?: string\n  errorMessage?: string | ((validation: ValidationResult) => string)\n  isPending?: boolean\n}\n\nconst SearchField = ({\n  className,\n  placeholder,\n  label,\n  description,\n  errorMessage,\n  isPending,\n  ...props\n}: SearchFieldProps) => {\n  return (\n    <SearchFieldPrimitive\n      aria-label={placeholder ?? props[\"aria-label\"] ?? \"Search...\"}\n      {...props}\n      className={composeTailwindRenderProps(className, base())}\n    >\n      {label && <Label>{label}</Label>}\n      <FieldGroup>\n        <IconSearch aria-hidden className={searchIcon()} />\n        <Input placeholder={placeholder ?? \"Search...\"} className={input()} />\n        {isPending ? (\n          <Loader variant=\"spin\" />\n        ) : (\n          <Button size=\"square-petite\" appearance=\"plain\" className={clearButton()}>\n            <IconX aria-hidden />\n          </Button>\n        )}\n      </FieldGroup>\n      {description && <Description>{description}</Description>}\n      <FieldError>{errorMessage}</FieldError>\n    </SearchFieldPrimitive>\n  )\n}\n\nexport { SearchField, type SearchFieldProps }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/search-field.tsx"
}
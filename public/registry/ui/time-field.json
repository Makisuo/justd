{
  "name": "time-field",
  "files": [
    {
      "name": "time-field.tsx",
      "content": "\"use client\"\n\nimport {\n  TimeField as TimeFieldPrimitive,\n  type TimeFieldProps as TimeFieldPrimitiveProps,\n  type TimeValue,\n  type ValidationResult,\n} from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nimport { DateInput } from \"./date-field\"\nimport { Description, FieldError, FieldGroup, Label } from \"./field\"\nimport { composeTailwindRenderProps } from \"./primitive\"\n\nexport interface TimeFieldProps<T extends TimeValue> extends TimeFieldPrimitiveProps<T> {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: ValidationResult) => string)\n  prefix?: React.ReactNode\n  suffix?: React.ReactNode\n}\n\nconst timeFieldStyles = tv({\n  base: \"flex w-fit min-w-28 justify-around whitespace-nowrap p-2 sm:text-sm\",\n})\n\nconst TimeField = <T extends TimeValue>({\n  prefix,\n  suffix,\n  label,\n  className,\n  description,\n  errorMessage,\n  ...props\n}: TimeFieldProps<T>) => {\n  return (\n    <TimeFieldPrimitive {...props} className={composeTailwindRenderProps(className, \"group flex flex-col gap-y-1.5\")}>\n      {label && <Label>{label}</Label>}\n      <FieldGroup>\n        {prefix ? <span data-slot=\"prefix\">{prefix}</span> : null}\n        <DateInput className={timeFieldStyles} />\n        {suffix ? <span data-slot=\"suffix\">{suffix}</span> : null}\n      </FieldGroup>\n      {description && <Description>{description}</Description>}\n      <FieldError>{errorMessage}</FieldError>\n    </TimeFieldPrimitive>\n  )\n}\n\nexport { TimeField }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/time-field.tsx"
}
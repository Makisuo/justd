{
  "name": "radio",
  "files": [
    {
      "name": "radio.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport type {\n  RadioGroupProps as RadioGroupPrimitiveProps,\n  RadioProps as RadioPrimitiveProps,\n  ValidationResult\n} from \"react-aria-components\"\nimport { Radio as RadioPrimitive, RadioGroup as RadioGroupPrimitive } from \"react-aria-components\"\nimport { tv } from \"tailwind-variants\"\n\nimport { Description, FieldError, Label } from \"./field\"\nimport { composeTailwindRenderProps } from \"./primitive\"\n\ninterface RadioGroupProps extends Omit<RadioGroupPrimitiveProps, \"children\"> {\n  label?: string\n  children?: React.ReactNode\n  description?: string\n  errorMessage?: string | ((validation: ValidationResult) => string)\n}\n\nconst RadioGroup = ({ label, description, errorMessage, children, ...props }: RadioGroupProps) => {\n  return (\n    <RadioGroupPrimitive\n      {...props}\n      className={composeTailwindRenderProps(props.className, \"group flex flex-col gap-2\")}\n    >\n      {label && <Label>{label}</Label>}\n      <div className=\"flex select-none gap-2 group-data-[orientation=horizontal]:flex-wrap group-data-[orientation=horizontal]:gap-2 sm:group-data-[orientation=horizontal]:gap-4 group-data-[orientation=vertical]:flex-col\">\n        {children}\n      </div>\n      {description && <Description>{description}</Description>}\n      <FieldError>{errorMessage}</FieldError>\n    </RadioGroupPrimitive>\n  )\n}\n\nconst radioStyles = tv({\n  base: \"size-4 shrink-0 rounded-full border bg-secondary transition\",\n  variants: {\n    isSelected: {\n      false: \"border-border\",\n      true: \"border-[4.5px] border-primary\"\n    },\n    isFocused: {\n      true: [\n        \"border-primary bg-primary/20 ring-4 ring-primary/20\",\n        \"group-data-invalid:border-danger/70 group-data-invalid:bg-danger/20 group-data-invalid:ring-danger/20\"\n      ]\n    },\n    isInvalid: {\n      true: \"border-danger/70 bg-danger/20\"\n    },\n    isDisabled: {\n      true: \"opacity-50\"\n    }\n  }\n})\n\ninterface RadioProps extends RadioPrimitiveProps {\n  description?: string\n}\n\nconst Radio = ({ description, ...props }: RadioProps) => {\n  return (\n    <>\n      <RadioPrimitive\n        {...props}\n        className={composeTailwindRenderProps(\n          props.className,\n          \"group flex items-center gap-2 text-sm text-fg transition disabled:text-fg/50 forced-colors:data-disabled:text-[GrayText]\"\n        )}\n      >\n        {(renderProps) => (\n          <div className=\"flex gap-2\">\n            <div\n              className={radioStyles({\n                ...renderProps,\n                className: \"description\" in props ? \"mt-1\" : \"mt-0.5\"\n              })}\n            />\n            <div className=\"flex flex-col gap-1\">\n              {props.children as React.ReactNode}\n              {description && <Description className=\"block\">{description}</Description>}\n            </div>\n          </div>\n        )}\n      </RadioPrimitive>\n    </>\n  )\n}\n\nexport { Radio, RadioGroup, radioStyles }\n"
    }
  ],
  "type": "components:ui",
  "componentPath": "components/ui/radio.tsx"
}
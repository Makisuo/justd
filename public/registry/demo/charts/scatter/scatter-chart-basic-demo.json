{
  "name": "scatter-chart-basic-demo",
  "files": [
    {
      "name": "scatter-chart-basic-demo.tsx",
      "content": "\"use client\"\n\nimport { CartesianGrid, Scatter, ScatterChart, XAxis, YAxis, ZAxis } from \"recharts\"\nimport { Card, Chart, type ChartConfig, ChartTooltip, ChartTooltipContent } from \"ui\"\n\nconst data = Array.from({ length: 30 }, (_, index) => ({\n  x: Math.floor(Math.random() * 500 + 50),\n  y: Math.floor(Math.random() * 30000 + 2000),\n  z: Math.floor(Math.random() * 200 + 10),\n  store: `Store ${index + 1}`\n}))\n\nconst chartConfig = {\n  performance: {\n    label: \"Store Performance\",\n    color: \"var(--chart-1)\"\n  }\n} satisfies ChartConfig\n\nexport default function StorePerformanceAnalysis() {\n  return (\n    <Card>\n      <Card.Header\n        className=\"items-center pb-0\"\n        title=\"Store Performance Analysis\"\n        description=\"Insights into revenue, footfall, and average order value across stores\"\n      />\n      <Card.Content>\n        <Chart config={chartConfig} className=\"min-h-32 max-h-min\">\n          <ScatterChart>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis type=\"number\" dataKey=\"x\" name=\"Footfall\" unit=\"k\" tickLine={false} axisLine={false} />\n            <YAxis type=\"number\" dataKey=\"y\" name=\"Revenue\" unit=\"$\" tickLine={false} axisLine={false} />\n            <ZAxis type=\"number\" dataKey=\"z\" name=\"Avg Order Value\" unit=\"$\" />\n            <ChartTooltip content={<ChartTooltipContent indicator=\"dashed\" />} />\n            <Scatter data={data} fill=\"var(--chart-1)\" />\n          </ScatterChart>\n        </Chart>\n      </Card.Content>\n    </Card>\n  )\n}\n"
    }
  ],
  "type": "components:demo",
  "componentPath": "components/docs/charts/scatter/scatter-chart-basic-demo.tsx"
}
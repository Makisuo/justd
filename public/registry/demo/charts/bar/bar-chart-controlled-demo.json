{
  "name": "bar-chart-controlled-demo",
  "files": [
    {
      "name": "bar-chart-controlled-demo.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport type { Key } from \"react-aria-components\"\nimport { Bar, BarChart, CartesianGrid, XAxis } from \"recharts\"\nimport { Card, Chart, type ChartConfig, ChartTooltip, ChartTooltipContent, Select } from \"ui\"\n\nconst chartData = Array.from({ length: 50 }, (_, index) => {\n  const date = new Date(2024, 0, 1 + index)\n  return {\n    date: date.toISOString().split(\"T\")[0],\n    sales: Math.floor(Math.random() * 1000 + 500),\n    revenue: Math.floor(Math.random() * 3000 + 1500)\n  }\n})\n\nconst chartConfig = {\n  sales: {\n    label: \"Sales\",\n    color: \"var(--chart-1)\"\n  },\n  revenue: {\n    label: \"Revenue\",\n    color: \"var(--chart-2)\"\n  }\n} satisfies ChartConfig\n\nexport default function BarChartControlledDemo() {\n  const [activeChart, setActiveChart] = React.useState<Key>(\"sales\")\n\n  const total = React.useMemo(\n    () => ({\n      sales: chartData.reduce((acc, curr) => acc + curr.sales, 0),\n      revenue: chartData.reduce((acc, curr) => acc + curr.revenue, 0)\n    }),\n    []\n  )\n\n  return (\n    <Card>\n      <Card.Header className=\"justify-between flex-row items-center\">\n        <div className=\"space-y-1\">\n          <Card.Title>Business Overview</Card.Title>\n          <Card.Description>Displaying total sales and revenue for the last 50 days</Card.Description>\n        </div>\n        <div>\n          <Select selectedKey={activeChart} onSelectionChange={setActiveChart}>\n            <Select.Trigger />\n            <Select.List placement=\"bottom end\" className=\"sm:min-w-40\">\n              {[\"sales\", \"revenue\"].map((key) => {\n                const chart = key as keyof typeof chartConfig\n                return (\n                  <Select.Option\n                    key={chart}\n                    data-active={activeChart === chart}\n                    id={key}\n                    textValue={chartConfig[chart].label}\n                  >\n                    <Select.OptionDetails\n                      label={chartConfig[chart].label}\n                      description={total[key as keyof typeof total].toLocaleString()}\n                    />\n                  </Select.Option>\n                )\n              })}\n            </Select.List>\n          </Select>\n        </div>\n      </Card.Header>\n      <Card.Content className=\"px-2 sm:p-6\">\n        <Chart config={chartConfig} className=\"aspect-auto h-[250px] w-full\">\n          <BarChart\n            accessibilityLayer\n            data={chartData}\n            margin={{\n              left: 12,\n              right: 12\n            }}\n          >\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"date\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              minTickGap={32}\n              tickFormatter={(value) => {\n                const date = new Date(value)\n                return date.toLocaleDateString(\"en-US\", {\n                  month: \"short\",\n                  day: \"numeric\"\n                })\n              }}\n            />\n            <ChartTooltip\n              content={\n                <ChartTooltipContent\n                  className=\"w-[150px]\"\n                  nameKey=\"views\"\n                  labelFormatter={(value) => {\n                    return new Date(value).toLocaleDateString(\"en-US\", {\n                      month: \"short\",\n                      day: \"numeric\",\n                      year: \"numeric\"\n                    })\n                  }}\n                />\n              }\n            />\n            <Bar dataKey={activeChart as keyof typeof chartConfig} fill={`var(--color-${activeChart})`} />\n          </BarChart>\n        </Chart>\n      </Card.Content>\n    </Card>\n  )\n}\n"
    }
  ],
  "type": "components:demo",
  "componentPath": "components/docs/charts/bar/bar-chart-controlled-demo.tsx"
}
{
  "name": "line-chart-controlled-demo",
  "files": [
    {
      "name": "line-chart-controlled-demo.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { CartesianGrid, Line, LineChart, XAxis } from \"recharts\"\nimport { Card, Chart, type ChartConfig, ChartTooltip, ChartTooltipContent, Toggle } from \"ui\"\n\nconst generateChartData = (startDate: string, endDate: string) => {\n  const result = []\n  const currentDate = new Date(startDate)\n\n  while (currentDate <= new Date(endDate)) {\n    const date = currentDate.toISOString().split(\"T\")[0]\n    result.push({\n      date,\n      revenue: Math.floor(Math.random() * 5000), // Random revenue value\n      expenses: Math.floor(Math.random() * 3000) // Random expenses value\n    })\n    currentDate.setDate(currentDate.getDate() + 1)\n  }\n\n  return result\n}\n\nconst chartData = generateChartData(\"2024-04-01\", \"2024-06-30\")\n\nconst chartConfig = {\n  revenue: {\n    label: \"Revenue\",\n    color: \"var(--chart-1)\"\n  },\n  expenses: {\n    label: \"Expenses\",\n    color: \"var(--chart-2)\"\n  }\n} satisfies ChartConfig\n\nexport default function LineChartControlledDemo() {\n  const [activeChart, setActiveChart] = React.useState<keyof typeof chartConfig>(\"revenue\")\n\n  return (\n    <Card>\n      <Card.Header className=\"flex justify-between items-center flex-row\">\n        <div className=\"space-y-1\">\n          <Card.Title>Revenue vs Expenses</Card.Title>\n          <Card.Description>Tracking daily revenue and expenses over the last 3 months</Card.Description>\n        </div>\n        <div className=\"flex gap-x-1\">\n          {[\"revenue\", \"expenses\"].map((key) => {\n            const chart = key as keyof typeof chartConfig\n            return (\n              <Toggle key={chart} isSelected={activeChart === chart} onPress={() => setActiveChart(chart)}>\n                {chartConfig[chart].label}\n              </Toggle>\n            )\n          })}\n        </div>\n      </Card.Header>\n      <Card.Content className=\"px-2 sm:p-6\">\n        <Chart config={chartConfig} className=\"aspect-auto h-[250px] w-full\">\n          <LineChart\n            accessibilityLayer\n            data={chartData}\n            margin={{\n              left: 12,\n              right: 12\n            }}\n          >\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"date\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              minTickGap={32}\n              tickFormatter={(value) => {\n                const date = new Date(value)\n                return date.toLocaleDateString(\"en-US\", {\n                  month: \"short\",\n                  day: \"numeric\"\n                })\n              }}\n            />\n            <ChartTooltip\n              content={\n                <ChartTooltipContent\n                  className=\"w-[150px]\"\n                  nameKey=\"views\"\n                  labelFormatter={(value) => {\n                    return new Date(value).toLocaleDateString(\"en-US\", {\n                      month: \"short\",\n                      day: \"numeric\",\n                      year: \"numeric\"\n                    })\n                  }}\n                />\n              }\n            />\n            <Line\n              dataKey={activeChart}\n              type=\"monotone\"\n              stroke={`var(--color-${activeChart})`}\n              strokeWidth={2}\n              dot={false}\n            />\n          </LineChart>\n        </Chart>\n      </Card.Content>\n    </Card>\n  )\n}\n"
    }
  ],
  "type": "components:demo",
  "componentPath": "components/docs/charts/line/line-chart-controlled-demo.tsx"
}
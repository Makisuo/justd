{
  "name": "radial-bar-chart-stacked-demo",
  "files": [
    {
      "name": "radial-bar-chart-stacked-demo.tsx",
      "content": "\"use client\"\n\nimport { Label, PolarRadiusAxis, RadialBar, RadialBarChart } from \"recharts\"\nimport type { ChartConfig } from \"ui\"\nimport { Card, Chart, ChartTooltip, ChartTooltipContent } from \"ui\"\n\nconst chartData = [{ month: \"January\", sales: 1260, profit: 570 }]\n\nconst chartConfig = {\n  sales: {\n    label: \"Sales\",\n    color: \"var(--chart-1)\"\n  },\n  profit: {\n    label: \"Profit\",\n    color: \"var(--chart-2)\"\n  }\n} satisfies ChartConfig\n\nexport default function SalesPerformanceOverview() {\n  const totalRevenue = chartData[0].sales + chartData[0].profit\n\n  return (\n    <Card>\n      <Card.Header\n        className=\"items-center text-center pb-0\"\n        title=\"Monthly Revenue Distribution\"\n        description=\"Visualizing sales and profit for Jan - Dec 2024\"\n      />\n      <Card.Content className=\"flex flex-1 items-center pb-0\">\n        <Chart config={chartConfig} className=\"mx-auto aspect-square w-full max-w-[250px]\">\n          <RadialBarChart data={chartData} endAngle={180} innerRadius={80} outerRadius={130}>\n            <ChartTooltip cursor={false} content={<ChartTooltipContent hideLabel />} />\n            <PolarRadiusAxis tick={false} tickLine={false} axisLine={false}>\n              <Label\n                content={({ viewBox }) => {\n                  if (viewBox && \"cx\" in viewBox && \"cy\" in viewBox) {\n                    return (\n                      <text x={viewBox.cx} y={viewBox.cy} textAnchor=\"middle\">\n                        <tspan x={viewBox.cx} y={(viewBox.cy || 0) - 16} className=\"fill-fg text-2xl font-bold\">\n                          {totalRevenue.toLocaleString()}\n                        </tspan>\n                        <tspan x={viewBox.cx} y={(viewBox.cy || 0) + 4} className=\"fill-muted-fg\">\n                          Total Revenue\n                        </tspan>\n                      </text>\n                    )\n                  }\n                }}\n              />\n            </PolarRadiusAxis>\n            <RadialBar\n              dataKey=\"sales\"\n              stackId=\"a\"\n              cornerRadius={5}\n              fill=\"var(--color-sales)\"\n              className=\"stroke-transparent stroke-2\"\n            />\n            <RadialBar\n              dataKey=\"profit\"\n              fill=\"var(--color-profit)\"\n              stackId=\"a\"\n              cornerRadius={5}\n              className=\"stroke-transparent stroke-2\"\n            />\n          </RadialBarChart>\n        </Chart>\n      </Card.Content>\n    </Card>\n  )\n}\n"
    }
  ],
  "type": "components:demo",
  "componentPath": "components/docs/charts/radial-bar/radial-bar-chart-stacked-demo.tsx"
}
{
  "name": "modal-size-demo",
  "files": [
    {
      "name": "modal-size-demo.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Button, Grid, Modal } from \"ui\"\n\ntype Size = Pick<React.ComponentProps<typeof Modal.Content>, \"size\">[\"size\"]\nconst sizes: Size[] = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\", \"3xl\", \"4xl\", \"5xl\"]\nexport default function ModalSizeDemo() {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const [modalSize, setModalSize] = React.useState<Size>(\"md\")\n\n  const handlePress = (size: Size, open: boolean) => {\n    setModalSize(size)\n    setIsOpen(open)\n  }\n  return (\n    <>\n      <Grid columns={{ initial: 2, sm: 3, lg: 4 }} gap={2}>\n        {sizes.map((size, idx) => (\n          <Grid.Item key={idx}>\n            <Button appearance=\"outline\" onPress={() => handlePress(size, true)}>\n              Open {size}\n            </Button>\n          </Grid.Item>\n        ))}\n      </Grid>\n\n      <Modal.Content isOpen={isOpen} onOpenChange={setIsOpen} size={modalSize}>\n        <Modal.Header>\n          <Modal.Title>Project Update</Modal.Title>\n          <Modal.Description>\n            Dive deep into our projectâ€™s latest updates where we've streamlined workflow and improved user interfaces.\n          </Modal.Description>\n        </Modal.Header>\n        <Modal.Footer>\n          <Button appearance=\"outline\" onPress={() => setIsOpen(false)}>\n            Close\n          </Button>\n          <Button onPress={() => setIsOpen(false)}>Confirm</Button>\n        </Modal.Footer>\n      </Modal.Content>\n    </>\n  )\n}\n"
    }
  ],
  "type": "components:demo",
  "componentPath": "components/docs/overlays/modal/modal-size-demo.tsx"
}
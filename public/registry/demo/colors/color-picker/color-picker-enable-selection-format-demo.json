{
  "name": "color-picker-enable-selection-format-demo",
  "files": [
    {
      "name": "color-picker-enable-selection-format-demo.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\n\nimport { type ColorSpace, getColorChannels } from \"react-aria-components\"\nimport { ColorArea, ColorField, ColorPicker, Select, defaultColor } from \"ui\"\n\nexport default function ColorPickerEnableSelectionFormatDemo() {\n  const [color, setColor] = useState(defaultColor)\n  const [isHexFormat, setIsHexFormat] = useState(false)\n  const [space, setSpace] = useState<ColorSpace>(\"rgb\")\n  return (\n    <ColorPicker label={color.toString(space)} value={color} onChange={setColor}>\n      <>\n        <ColorArea />\n        <Select\n          aria-label=\"Color Space\"\n          selectedKey={space}\n          defaultSelectedKey={space}\n          onSelectionChange={(s) => {\n            setSpace(s as ColorSpace)\n            setIsHexFormat(s === \"hex\")\n          }}\n        >\n          <Select.Trigger />\n          <Select.List>\n            {[\"rgb\", \"hex\", \"hsl\", \"hsb\"].map((s) => (\n              <Select.Option key={s} id={s} textValue={s}>\n                {s}\n              </Select.Option>\n            ))}\n          </Select.List>\n        </Select>\n        {isHexFormat ? (\n          <ColorField aria-label=\"Hex color\" colorSpace={space} />\n        ) : getColorChannels(space).length > 0 ? (\n          <div className=\"flex gap-2 sm:max-w-56\">\n            {getColorChannels(space).map((channel) => (\n              <ColorField colorSpace={space} channel={channel} key={channel} />\n            ))}\n          </div>\n        ) : null}\n      </>\n    </ColorPicker>\n  )\n}\n"
    }
  ],
  "type": "components:demo",
  "componentPath": "components/docs/colors/color-picker/color-picker-enable-selection-format-demo.tsx"
}
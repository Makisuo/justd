{
  "name": "app-sidebar",
  "files": [
    {
      "name": "app-sidebar.tsx",
      "content": "\"use client\"\n\nimport { BrandIcon } from \"@/components/brand-icon\"\nimport { IconFolderFill, IconFolderOpen } from \"justd-icons\"\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarDisclosure,\n  SidebarDisclosureGroup,\n  SidebarDisclosurePanel,\n  SidebarDisclosureTrigger,\n  SidebarItem,\n  SidebarLabel,\n  SidebarRail,\n} from \"ui\"\n\nimport { folders } from \"./folders\"\nimport { SidebarHeader } from \"./sidebar-header\"\n\nexport default function AppSidebar(props: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar {...props}>\n      <SidebarHeader />\n      <SidebarContent className=\"pb-10\">\n        <SidebarDisclosureGroup>\n          {folders.map((item) => (\n            <SidebarTree key={item.id} item={item} index={1} />\n          ))}\n        </SidebarDisclosureGroup>\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  )\n}\n\nfunction SidebarTree({ item, index }: { item: (typeof folders)[number]; index: number }) {\n  if (!item.files || item.files.length === 0) {\n    return (\n      <SidebarItem\n        isCurrent={item.id === 1212}\n        className=\"pl-[calc(var(--nested-level)*16px)]\"\n        style={\n          {\n            \"--nested-level\": index,\n          } as React.CSSProperties\n        }\n      >\n        <BrandIcon label={item.label} />\n        <SidebarLabel>{item.label}</SidebarLabel>\n      </SidebarItem>\n    )\n  }\n\n  return (\n    <SidebarDisclosureGroup defaultExpandedKeys={[1, 12, 121, 1212, 6, 61, 611, 62, 621, 6212, 62121, 1211]}>\n      <SidebarDisclosure id={item.id}>\n        {({ isExpanded }) => (\n          <>\n            <SidebarDisclosureTrigger\n              className=\"pl-[calc(var(--nested-level)*16px)]\"\n              style={\n                {\n                  \"--nested-level\": index,\n                } as React.CSSProperties\n              }\n            >\n              {isExpanded ? <IconFolderOpen /> : <IconFolderFill />}\n              <SidebarLabel>{item.label}</SidebarLabel>\n            </SidebarDisclosureTrigger>\n            <SidebarDisclosurePanel>\n              {item.files!.map((child) => (\n                <SidebarTree key={child.id} item={child} index={index + 1} />\n              ))}\n            </SidebarDisclosurePanel>\n          </>\n        )}\n      </SidebarDisclosure>\n    </SidebarDisclosureGroup>\n  )\n}\n"
    }
  ],
  "type": "components:blocks",
  "componentPath": "app/blocks/sidebar/sidebar-18/app-sidebar.tsx"
}
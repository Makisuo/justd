{"content":"## Theme Provider\n\nWhen using Inertia.js, you'll need to create a `theme-provider.tsx` component and place it in the `resources/js/components` folder.\n\n<PlainCode title='theme-provider.tsx' lang=\"tsx\" code={`import * as React from \"react\"\n\n  type Theme = \"dark\" | \"light\" | \"system\"\n\n  type ThemeProviderProps = {\n    children: React.ReactNode\n    defaultTheme?: Theme\n    storageKey?: string\n  }\n\n  type ThemeProviderState = {\n    theme: Theme\n    setTheme: (theme: Theme) => void\n  }\n\n  const initialState: ThemeProviderState = {\n    theme: \"system\",\n    setTheme: () => null\n  }\n\n  const ThemeProviderContext = React.createContext<ThemeProviderState>(initialState)\n\n  export function ThemeProvider({\n    children,\n    defaultTheme = \"system\",\n    storageKey = \"vite-ui-theme\",\n    ...props\n  }: ThemeProviderProps) {\n    const [theme, setTheme] = React.useState<Theme>(() => (localStorage.getItem(storageKey) as Theme) || defaultTheme)\n\n    React.useEffect(() => {\n      const root = window.document.documentElement\n\n      root.classList.remove(\"light\", \"dark\")\n\n      if (theme === \"system\") {\n        const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\"\n\n        root.classList.add(systemTheme)\n        return\n      }\n\n      if (theme === \"light\" || theme === \"dark\") {\n        root.classList.add(theme)\n      }\n    }, [theme])\n\n    const value = {\n      theme,\n      setTheme: (newTheme: Theme) => {\n        if (newTheme === \"light\" || newTheme === \"dark\" || newTheme === \"system\") {\n          localStorage.setItem(storageKey, newTheme)\n          setTheme(newTheme)\n        }\n      }\n    }\n\n    return (\n      <ThemeProviderContext.Provider {...props} value={value}>\n        {children}\n      </ThemeProviderContext.Provider>\n    )\n  }\n\n  export const useTheme = () => {\n    const context = React.useContext(ThemeProviderContext)\n\n    if (context === undefined) throw new Error(\"useTheme must be used within a ThemeProvider\")\n\n    return context\n  }`} />\n\n## Root App\nNot sure if you're using Inertia.js with Ruby or Laravel, but if you're on Laravel, the first step is to generate your route by running `php artisan ziggy:generate`. After that, you can add it to your `resources/js/app.tsx` like this:\n\n<PlainCode title='app.tsx' code={`import '../css/app.css';\nimport './bootstrap';\n\nimport { Ziggy } from '@/ziggy';\nimport { createInertiaApp } from '@inertiajs/react';\nimport { Providers } from 'components/providers';\nimport { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';\nimport { createRoot, hydrateRoot } from 'react-dom/client';\nimport { useRoute } from 'ziggy-js';\n\nconst appName = import.meta.env.VITE_APP_NAME || 'Laravel';\n\ncreateInertiaApp({\n  title: (title) => (title ? title + ' / ' + appName : appName),\n  resolve: (name) => resolvePageComponent('./pages/' + name + '.tsx', import.meta.glob('./pages/**/*.tsx')),\n  setup({ el, App, props }) {\n    // @ts-expect-error\n    window.route = useRoute(Ziggy as any);\n    const appElement = (\n      <Providers>\n        <App {...props} />\n      </Providers>\n    );\n    if (import.meta.env.SSR) {\n      hydrateRoot(el, appElement);\n      return;\n    }\n\n      createRoot(el).render(appElement);\n    },\n    progress: false\n  });`}/>\n\n## Theme Switcher\n\n<Installation options={{ isManual: true }}  items={['justd-icons']}/>\n\n<PlainCode title='theme-switcher.tsx' code={`import { IconMoon, IconSun } from 'justd-icons'\n  import { Button } from '@/Components/ui/button'\n  import { useTheme } from '@/Components/theme-provider'\n\n  export function ThemeSwitcher() {\n    const { theme, setTheme } = useTheme()\n\n    return (\n      <Button\n         appearance=\"outline\"\n         size=\"square-petite\"\n         aria-label={'Switch to ' + theme === 'light' ? 'dark' : 'light' + 'mode'}\n         onPress={() => setTheme(theme === 'light' ? 'dark' : 'light')}\n      >\n         <IconSun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\"/>\n         <IconMoon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\"/>\n      </Button>\n    )\n  }`\n}/>\n\n## Group Providers\n\nWhen you're juggling multiple providers, like React Aria Components, you need a `RouterProvider`. To combine 'em all, just create a new file called `providers.tsx` in your `resources/js` folder and drop in this code:\n\n<PlainCode title='providers.tsx' code={`import { ThemeProvider } from '@/Components/theme-provider'\n  import { router } from '@inertiajs/react'\n  import React from 'react'\n  import { RouterProvider } from 'react-aria-components'\n\n  export function Provider({ children }: { children: React.ReactNode }) {\n    return (\n      <RouterProvider navigate={(to, options) => router.visit(to, options as any)}>\n        <ThemeProvider defaultTheme=\"system\" storageKey=\"irsyad-ui-theme\">\n          {children}\n        </ThemeProvider>\n      </RouterProvider>\n    )\n}`}/>\n\nNext up, tweak your `resources/js/app.tsx` file to include this:\n\n```tsx {1} {4-6}\nimport { Provider } from './provider'\n\nconst appElement = (\n  <Provider>\n    <App {...props} />\n  </Provider>\n)\n```","title":"Inertia.js","description":"Ready to give your Inertia.js project that sleek, dark mode look? Check out this guide and get your app looking smooth and stylish in the dark.","_meta":{"filePath":"dark-mode/inertia-js.mdx","fileName":"inertia-js.mdx","directory":"dark-mode","extension":"mdx","path":"dark-mode/inertia-js"},"toc":[{"title":"Theme Provider","url":"#theme-provider","depth":2},{"title":"Root App","url":"#root-app","depth":2},{"title":"Theme Switcher","url":"#theme-switcher","depth":2},{"title":"Group Providers","url":"#group-providers","depth":2}],"structuredData":{"contents":[{"heading":"theme-provider","content":"When using Inertia.js, you'll need to create a theme-provider.tsx component and place it in the resources/js/components folder."},{"heading":"root-app","content":"Not sure if you're using Inertia.js with Ruby or Laravel, but if you're on Laravel, the first step is to generate your route by running php artisan ziggy:generate. After that, you can add it to your resources/js/app.tsx like this:"},{"heading":"group-providers","content":"When you're juggling multiple providers, like React Aria Components, you need a RouterProvider. To combine 'em all, just create a new file called providers.tsx in your resources/js folder and drop in this code:"},{"heading":"group-providers","content":"Next up, tweak your resources/js/app.tsx file to include this:"}],"headings":[{"id":"theme-provider","content":"Theme Provider"},{"id":"root-app","content":"Root App"},{"id":"theme-switcher","content":"Theme Switcher"},{"id":"group-providers","content":"Group Providers"}]},"body":"var Component=(()=>{var p=Object.create;var n=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var y=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),f=(i,e)=>{for(var r in e)n(i,r,{get:e[r],enumerable:!0})},a=(i,e,r,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of k(e))!v.call(i,o)&&o!==r&&n(i,o,{get:()=>e[o],enumerable:!(s=u(e,o))||s.enumerable});return i};var E=(i,e,r)=>(r=i!=null?p(g(i)):{},a(e||!i||!i.__esModule?n(r,\"default\",{value:i,enumerable:!0}):r,i)),T=i=>a(n({},\"__esModule\",{value:!0}),i);var l=y((w,h)=>{h.exports=_jsx_runtime});var x={};f(x,{default:()=>m});var t=E(l());function d(i){let e={code:\"code\",h2:\"h2\",p:\"p\",pre:\"pre\",span:\"span\",...i.components},{Installation:r,PlainCode:s}=e;return r||c(\"Installation\",!0),s||c(\"PlainCode\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:\"theme-provider\",children:\"Theme Provider\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"When using Inertia.js, you'll need to create a \",(0,t.jsx)(e.code,{children:\"theme-provider.tsx\"}),\" component and place it in the \",(0,t.jsx)(e.code,{children:\"resources/js/components\"}),\" folder.\"]}),`\n`,(0,t.jsx)(s,{title:\"theme-provider.tsx\",lang:\"tsx\",code:`import * as React from \"react\"\n\ntype Theme = \"dark\" | \"light\" | \"system\"\n\ntype ThemeProviderProps = {\n  children: React.ReactNode\n  defaultTheme?: Theme\n  storageKey?: string\n}\n\ntype ThemeProviderState = {\n  theme: Theme\n  setTheme: (theme: Theme) => void\n}\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null\n}\n\nconst ThemeProviderContext = React.createContext<ThemeProviderState>(initialState)\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"vite-ui-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = React.useState<Theme>(() => (localStorage.getItem(storageKey) as Theme) || defaultTheme)\n\n  React.useEffect(() => {\n    const root = window.document.documentElement\n\n    root.classList.remove(\"light\", \"dark\")\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\"\n\n      root.classList.add(systemTheme)\n      return\n    }\n\n    if (theme === \"light\" || theme === \"dark\") {\n      root.classList.add(theme)\n    }\n  }, [theme])\n\n  const value = {\n    theme,\n    setTheme: (newTheme: Theme) => {\n      if (newTheme === \"light\" || newTheme === \"dark\" || newTheme === \"system\") {\n        localStorage.setItem(storageKey, newTheme)\n        setTheme(newTheme)\n      }\n    }\n  }\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = React.useContext(ThemeProviderContext)\n\n  if (context === undefined) throw new Error(\"useTheme must be used within a ThemeProvider\")\n\n  return context\n}`}),`\n`,(0,t.jsx)(e.h2,{id:\"root-app\",children:\"Root App\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Not sure if you're using Inertia.js with Ruby or Laravel, but if you're on Laravel, the first step is to generate your route by running \",(0,t.jsx)(e.code,{children:\"php artisan ziggy:generate\"}),\". After that, you can add it to your \",(0,t.jsx)(e.code,{children:\"resources/js/app.tsx\"}),\" like this:\"]}),`\n`,(0,t.jsx)(s,{title:\"app.tsx\",code:`import '../css/app.css';\nimport './bootstrap';\n\nimport { Ziggy } from '@/ziggy';\nimport { createInertiaApp } from '@inertiajs/react';\nimport { Providers } from 'components/providers';\nimport { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';\nimport { createRoot, hydrateRoot } from 'react-dom/client';\nimport { useRoute } from 'ziggy-js';\n\nconst appName = import.meta.env.VITE_APP_NAME || 'Laravel';\n\ncreateInertiaApp({\ntitle: (title) => (title ? title + ' / ' + appName : appName),\nresolve: (name) => resolvePageComponent('./pages/' + name + '.tsx', import.meta.glob('./pages/**/*.tsx')),\nsetup({ el, App, props }) {\n  // @ts-expect-error\n  window.route = useRoute(Ziggy as any);\n  const appElement = (\n    <Providers>\n      <App {...props} />\n    </Providers>\n  );\n  if (import.meta.env.SSR) {\n    hydrateRoot(el, appElement);\n    return;\n  }\n\n    createRoot(el).render(appElement);\n  },\n  progress: false\n});`}),`\n`,(0,t.jsx)(e.h2,{id:\"theme-switcher\",children:\"Theme Switcher\"}),`\n`,(0,t.jsx)(r,{options:{isManual:!0},items:[\"justd-icons\"]}),`\n`,(0,t.jsx)(s,{title:\"theme-switcher.tsx\",code:`import { IconMoon, IconSun } from 'justd-icons'\nimport { Button } from '@/Components/ui/button'\nimport { useTheme } from '@/Components/theme-provider'\n\nexport function ThemeSwitcher() {\n  const { theme, setTheme } = useTheme()\n\n  return (\n    <Button\n       appearance=\"outline\"\n       size=\"square-petite\"\n       aria-label={'Switch to ' + theme === 'light' ? 'dark' : 'light' + 'mode'}\n       onPress={() => setTheme(theme === 'light' ? 'dark' : 'light')}\n    >\n       <IconSun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\"/>\n       <IconMoon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\"/>\n    </Button>\n  )\n}`}),`\n`,(0,t.jsx)(e.h2,{id:\"group-providers\",children:\"Group Providers\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"When you're juggling multiple providers, like React Aria Components, you need a \",(0,t.jsx)(e.code,{children:\"RouterProvider\"}),\". To combine 'em all, just create a new file called \",(0,t.jsx)(e.code,{children:\"providers.tsx\"}),\" in your \",(0,t.jsx)(e.code,{children:\"resources/js\"}),\" folder and drop in this code:\"]}),`\n`,(0,t.jsx)(s,{title:\"providers.tsx\",code:`import { ThemeProvider } from '@/Components/theme-provider'\nimport { router } from '@inertiajs/react'\nimport React from 'react'\nimport { RouterProvider } from 'react-aria-components'\n\nexport function Provider({ children }: { children: React.ReactNode }) {\n  return (\n    <RouterProvider navigate={(to, options) => router.visit(to, options as any)}>\n      <ThemeProvider defaultTheme=\"system\" storageKey=\"irsyad-ui-theme\">\n        {children}\n      </ThemeProvider>\n    </RouterProvider>\n  )\n}`}),`\n`,(0,t.jsxs)(e.p,{children:[\"Next up, tweak your \",(0,t.jsx)(e.code,{children:\"resources/js/app.tsx\"}),\" file to include this:\"]}),`\n`,(0,t.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.158.225-.39.435-.788.636-1.18zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.406-1.282.66-1.933zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034-.44.572-.895 1.095-1.345 1.565-.455-.47-.91-.993-1.36-1.565z\" fill=\"currentColor\" /></svg>',children:(0,t.jsxs)(e.code,{children:[(0,t.jsxs)(e.span,{className:\"line\",children:[(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#D73A49\",\"--shiki-dark\":\"#F97583\"},children:\"import\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\" { Provider } \"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#D73A49\",\"--shiki-dark\":\"#F97583\"},children:\"from\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#032F62\",\"--shiki-dark\":\"#9ECBFF\"},children:\" './provider'\"})]}),`\n`,(0,t.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,t.jsxs)(e.span,{className:\"line\",children:[(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#D73A49\",\"--shiki-dark\":\"#F97583\"},children:\"const\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#6F42C1\",\"--shiki-dark\":\"#B392F0\"},children:\" appElement\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#D73A49\",\"--shiki-dark\":\"#F97583\"},children:\" =\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\" (\"})]}),`\n`,(0,t.jsxs)(e.span,{className:\"line\",children:[(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\"  <\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#005CC5\",\"--shiki-dark\":\"#79B8FF\"},children:\"Provider\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\">\"})]}),`\n`,(0,t.jsxs)(e.span,{className:\"line\",children:[(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\"    <\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#005CC5\",\"--shiki-dark\":\"#79B8FF\"},children:\"App\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\" {\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#D73A49\",\"--shiki-dark\":\"#F97583\"},children:\"...\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\"props} />\"})]}),`\n`,(0,t.jsxs)(e.span,{className:\"line\",children:[(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\"  </\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#005CC5\",\"--shiki-dark\":\"#79B8FF\"},children:\"Provider\"}),(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\">\"})]}),`\n`,(0,t.jsx)(e.span,{className:\"line\",children:(0,t.jsx)(e.span,{style:{\"--shiki-light\":\"#24292E\",\"--shiki-dark\":\"#E1E4E8\"},children:\")\"})})]})})]})}function m(i={}){let{wrapper:e}=i.components||{};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(d,{...i})}):d(i)}function c(i,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return T(x);})();\n;return Component;"}
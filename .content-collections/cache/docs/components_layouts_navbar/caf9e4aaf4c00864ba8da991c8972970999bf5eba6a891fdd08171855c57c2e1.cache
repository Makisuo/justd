{"content":"## Basic\nA navbar provides a variety of actions or options for users to select.\n\n<CodeSandbox\n  fullscreenUrl='/blocks/navbar/navbar-00'\n  source={{\n    preview: 'blocks/navbar/navbar-00/app-navbar',\n    'page.tsx': 'blocks/navbar/navbar-00/page',\n    'layout.tsx': 'blocks/navbar/navbar-00/layout',\n    'app-navbar.tsx': 'blocks/navbar/navbar-00/app-navbar',\n  }} />\n\n## Installation\n<Installation options={{ isComponent: true }} items={['blocks/navbar']} />\n\n<WarningFramer />\n\n## Composed Components\n<Composed components={['button', 'sheet']} />\n\n## Manual Installation\n<Installation options={{ isManual: true }} items={['react-aria-components', 'motion']} />\n\n<SourceCode toShow={'blocks/navbar'} />\n\n## Anatomy\n<Anatomy show='blocks/navbar-anatomy' />\n\n## Intent\nThere are three types of intents: `navbar`, `floating`, and `inset`, each with distinct behaviors.\n\n### Navbar\nThe default intent of the navbar is `navbar`. You can change it to `floating` or `inset` by setting the `intent` prop.\n\n<CodeSandbox\n  fullscreenUrl='/blocks/navbar/navbar-01'\n  source={{\n    preview: 'blocks/navbar/navbar-01/app-navbar',\n    'page.tsx': 'blocks/navbar/navbar-01/page',\n    'layout.tsx': 'blocks/navbar/navbar-01/layout',\n    'app-navbar.tsx': 'blocks/navbar/navbar-01/app-navbar',\n  }} />\n\n### Floating\nThe floating intent will have a border inside the navbar itself, the wrapper will have a padding to the content.\n<CodeSandbox\n  fullscreenUrl='/blocks/navbar/navbar-02'\n  source={{\n    preview: 'blocks/navbar/navbar-02/app-navbar',\n    'page.tsx': 'blocks/navbar/navbar-02/page',\n    'layout.tsx': 'blocks/navbar/navbar-02/layout',\n    'app-navbar.tsx': 'blocks/navbar/navbar-02/app-navbar',\n  }} />\n\n\n### Inset\nThe inset one will have the padding to inset main content. You can of course see what's going on the demo, but you can also see the [live example here](/blocks/navbar/navbar-03).\n<CodeSandbox\n  fullscreenUrl='/blocks/navbar/navbar-03'\n  source={{\n    preview: 'blocks/navbar/navbar-03/app-navbar',\n    'page.tsx': 'blocks/navbar/navbar-03/page',\n    'layout.tsx': 'blocks/navbar/navbar-03/layout',\n    'app-navbar.tsx': 'blocks/navbar/navbar-03/app-navbar',\n  }} />\n\n## Using the Layout\nThere are several ways to use the layout, depending on your framework. Or, if you're not using any framework, you can simply apply the layout component.\n\n### Common Usage\nA typical approach is to wrap your content with the layout like this:\n```\n<AppLayout>\n  {/* your main content */}\n</AppLayout>\n```\n### Inertia.js\nIf you're using Inertia.js, you can implement a persistent layout. Here's how it looks:\n\n```\nHome.layout = (page: React.ReactNode) => <AppLayout children={page} />\n```\n\n### Next.js\nIf you're using Next.js, there's no extra configuration needed. Simply create a page component and ensure it inherits the layout like this:\n```bash\napp/\n├── app-navbar.tsx\n├── layout.tsx\n└── page.tsx\n```\n\n## Logo\nThe logo is typically the first item in the navbar, usually representing the brand or company.\n```\n<Navbar>\n  <Navbar.Nav>\n    <Navbar.Logo href=\"#\">\n      <IconBrandApple className=\"size-5\" />\n    </Navbar.Logo>\n    <Navbar.Section>\n      <Navbar.Item href=\"#\">Store</Navbar.Item>\n```\n\n## Current\nHighlight the current page in the navbar for better navigation clarity by setting the `isCurrent` prop to `true`.\n```\n<Navbar.Item isCurrent href=\"#\"/>\n```\n\n\n## Sticky\nYou also make the navbar sticky by setting the `isSticky` prop to `true`.\n```\n<Navbar isSticky />\n```\n\n## Using Icons\nIf you'd like to use icons on the navbar items, that's no problem at all. The navbar is already designed and optimized to accommodate icons seamlessly. First of all, you need to install the `justd-icons` package.\n<Installation className='mb-6' options={{ isManual: false }} items={['justd-icons']} />\n<CodeSandbox\n  fullscreenUrl='/blocks/navbar/navbar-05'\n  source={{\n    preview: 'blocks/navbar/navbar-05/app-navbar',\n    'page.tsx': 'blocks/navbar/navbar-05/page',\n    'layout.tsx': 'blocks/navbar/navbar-05/layout',\n    'app-navbar.tsx': 'blocks/navbar/navbar-05/app-navbar',\n  }} />\n\n## Disabled\nDisable individual navbar items when needed.\n<CodeSandbox\n  fullscreenUrl='/blocks/navbar/navbar-04'\n  source={{\n    preview: 'blocks/navbar/navbar-04/app-navbar',\n    'page.tsx': 'blocks/navbar/navbar-04/page',\n    'layout.tsx': 'blocks/navbar/navbar-04/layout',\n    'app-navbar.tsx': 'blocks/navbar/navbar-04/app-navbar',\n  }} />\n\n## Controlled\nOn mobile devices, the navbar is hidden by default. You can open it using `Navbar.Trigger`, but there are times when you might want to manage its state by clicking one of the links within the navbar. You can achieve this because it shares the sheet properties, specifically `isOpen` and `onOpenChange`. There are multiple ways to control the state, but the simplest method is to listen for path changes and set `isOpen` to `true` or `false` accordingly.\n\n### Inertia.js\nWhen you are using inertia.js, you can listen the path by using `usePage` hooks. If you're not sure, you can always see the real example here at [starter kit inertia.js](https://github.com/justdlabs/inertia.ts).\n```\nimport { usePage } from '@inertiajs/react';\n\nexport function AppNavbar({ children, ...props }: React.ComponentProps<typeof Navbar>) {\n\n  const page = usePage();\n  const [isOpen, setIsOpen] = React.useState(false);\n  React.useEffect(() => setIsOpen(false), [page.url]);\n\n  return (\n    <Navbar isOpen={isOpen} onOpenChange={setIsOpen} {...props}/>\n  )\n}\n```\n\n### Next.js\nOn next.js, you can listen the path by using `usePathname` hooks. If you're not sure, you can always see the real example here at [starter kit next.js](https://github.com/justdlabs/next.js). or see live example [here](/blocks/navbar/navbar-01).\n```\nimport { usePathname } from \"next/navigation\"\n\nexport function AppNavbar({ children, ...props }: React.ComponentProps<typeof Navbar>) {\n\n  const pathname = usePathname();\n  const [isOpen, setIsOpen] = React.useState(false);\n  React.useEffect(() => setIsOpen(false), [pathname]);\n\n  return (\n    <Navbar isOpen={isOpen} onOpenChange={setIsOpen} {...props}>\n```","title":"Navbar","description":"A navbar is a component that helps you organize your content and navigation in a consistent way.","_meta":{"filePath":"components/layouts/navbar.mdx","fileName":"navbar.mdx","directory":"components/layouts","extension":"mdx","path":"components/layouts/navbar"},"toc":[{"title":"Basic","url":"#basic","depth":2},{"title":"Installation","url":"#installation","depth":2},{"title":"Composed Components","url":"#composed-components","depth":2},{"title":"Manual Installation","url":"#manual-installation","depth":2},{"title":"Anatomy","url":"#anatomy","depth":2},{"title":"Intent","url":"#intent","depth":2},{"title":"Navbar","url":"#navbar","depth":3},{"title":"Floating","url":"#floating","depth":3},{"title":"Inset","url":"#inset","depth":3},{"title":"Using the Layout","url":"#using-the-layout","depth":2},{"title":"Common Usage","url":"#common-usage","depth":3},{"title":"Inertia.js","url":"#inertiajs","depth":3},{"title":"Next.js","url":"#nextjs","depth":3},{"title":"Logo","url":"#logo","depth":2},{"title":"Current","url":"#current","depth":2},{"title":"Sticky","url":"#sticky","depth":2},{"title":"Using Icons","url":"#using-icons","depth":2},{"title":"Disabled","url":"#disabled","depth":2},{"title":"Controlled","url":"#controlled","depth":2},{"title":"Inertia.js","url":"#inertiajs-1","depth":3},{"title":"Next.js","url":"#nextjs-1","depth":3}],"structuredData":{"contents":[{"heading":"basic","content":"A navbar provides a variety of actions or options for users to select."},{"heading":"intent","content":"There are three types of intents: navbar, floating, and inset, each with distinct behaviors."},{"heading":"navbar","content":"The default intent of the navbar is navbar. You can change it to floating or inset by setting the intent prop."},{"heading":"floating","content":"The floating intent will have a border inside the navbar itself, the wrapper will have a padding to the content."},{"heading":"inset","content":"The inset one will have the padding to inset main content. You can of course see what's going on the demo, but you can also see the live example here."},{"heading":"using-the-layout","content":"There are several ways to use the layout, depending on your framework. Or, if you're not using any framework, you can simply apply the layout component."},{"heading":"common-usage","content":"A typical approach is to wrap your content with the layout like this:"},{"heading":"inertiajs","content":"If you're using Inertia.js, you can implement a persistent layout. Here's how it looks:"},{"heading":"nextjs","content":"If you're using Next.js, there's no extra configuration needed. Simply create a page component and ensure it inherits the layout like this:"},{"heading":"logo","content":"The logo is typically the first item in the navbar, usually representing the brand or company."},{"heading":"current","content":"Highlight the current page in the navbar for better navigation clarity by setting the isCurrent prop to true."},{"heading":"sticky","content":"You also make the navbar sticky by setting the isSticky prop to true."},{"heading":"using-icons","content":"If you'd like to use icons on the navbar items, that's no problem at all. The navbar is already designed and optimized to accommodate icons seamlessly. First of all, you need to install the justd-icons package."},{"heading":"disabled","content":"Disable individual navbar items when needed."},{"heading":"controlled","content":"On mobile devices, the navbar is hidden by default. You can open it using Navbar.Trigger, but there are times when you might want to manage its state by clicking one of the links within the navbar. You can achieve this because it shares the sheet properties, specifically isOpen and onOpenChange. There are multiple ways to control the state, but the simplest method is to listen for path changes and set isOpen to true or false accordingly."},{"heading":"inertiajs-1","content":"When you are using inertia.js, you can listen the path by using usePage hooks. If you're not sure, you can always see the real example here at starter kit inertia.js."},{"heading":"nextjs-1","content":"On next.js, you can listen the path by using usePathname hooks. If you're not sure, you can always see the real example here at starter kit next.js. or see live example here."}],"headings":[{"id":"basic","content":"Basic"},{"id":"installation","content":"Installation"},{"id":"composed-components","content":"Composed Components"},{"id":"manual-installation","content":"Manual Installation"},{"id":"anatomy","content":"Anatomy"},{"id":"intent","content":"Intent"},{"id":"navbar","content":"Navbar"},{"id":"floating","content":"Floating"},{"id":"inset","content":"Inset"},{"id":"using-the-layout","content":"Using the Layout"},{"id":"common-usage","content":"Common Usage"},{"id":"inertiajs","content":"Inertia.js"},{"id":"nextjs","content":"Next.js"},{"id":"logo","content":"Logo"},{"id":"current","content":"Current"},{"id":"sticky","content":"Sticky"},{"id":"using-icons","content":"Using Icons"},{"id":"disabled","content":"Disabled"},{"id":"controlled","content":"Controlled"},{"id":"inertiajs-1","content":"Inertia.js"},{"id":"nextjs-1","content":"Next.js"}]},"body":"var Component=(()=>{var g=Object.create;var h=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var N=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),x=(a,e)=>{for(var i in e)h(a,i,{get:e[i],enumerable:!0})},d=(a,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of k(e))!y.call(a,r)&&r!==i&&h(a,r,{get:()=>e[r],enumerable:!(s=m(e,r))||s.enumerable});return a};var C=(a,e,i)=>(i=a!=null?g(f(a)):{},d(e||!a||!a.__esModule?h(i,\"default\",{value:a,enumerable:!0}):i,a)),w=a=>d(h({},\"__esModule\",{value:!0}),a);var b=N((A,p)=>{p.exports=_jsx_runtime});var I={};x(I,{default:()=>u});var n=C(b());function v(a){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",p:\"p\",pre:\"pre\",span:\"span\",...a.components},{Anatomy:i,CodeSandbox:s,Composed:r,Installation:t,SourceCode:c,WarningFramer:o}=e;return i||l(\"Anatomy\",!0),s||l(\"CodeSandbox\",!0),r||l(\"Composed\",!0),t||l(\"Installation\",!0),c||l(\"SourceCode\",!0),o||l(\"WarningFramer\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:\"basic\",children:\"Basic\"}),`\n`,(0,n.jsx)(e.p,{children:\"A navbar provides a variety of actions or options for users to select.\"}),`\n`,(0,n.jsx)(s,{fullscreenUrl:\"/blocks/navbar/navbar-00\",source:{preview:\"blocks/navbar/navbar-00/app-navbar\",\"page.tsx\":\"blocks/navbar/navbar-00/page\",\"layout.tsx\":\"blocks/navbar/navbar-00/layout\",\"app-navbar.tsx\":\"blocks/navbar/navbar-00/app-navbar\"}}),`\n`,(0,n.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,n.jsx)(t,{options:{isComponent:!0},items:[\"blocks/navbar\"]}),`\n`,(0,n.jsx)(o,{}),`\n`,(0,n.jsx)(e.h2,{id:\"composed-components\",children:\"Composed Components\"}),`\n`,(0,n.jsx)(r,{components:[\"button\",\"sheet\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"manual-installation\",children:\"Manual Installation\"}),`\n`,(0,n.jsx)(t,{options:{isManual:!0},items:[\"react-aria-components\",\"motion\"]}),`\n`,(0,n.jsx)(c,{toShow:\"blocks/navbar\"}),`\n`,(0,n.jsx)(e.h2,{id:\"anatomy\",children:\"Anatomy\"}),`\n`,(0,n.jsx)(i,{show:\"blocks/navbar-anatomy\"}),`\n`,(0,n.jsx)(e.h2,{id:\"intent\",children:\"Intent\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"There are three types of intents: \",(0,n.jsx)(e.code,{children:\"navbar\"}),\", \",(0,n.jsx)(e.code,{children:\"floating\"}),\", and \",(0,n.jsx)(e.code,{children:\"inset\"}),\", each with distinct behaviors.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"navbar\",children:\"Navbar\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The default intent of the navbar is \",(0,n.jsx)(e.code,{children:\"navbar\"}),\". You can change it to \",(0,n.jsx)(e.code,{children:\"floating\"}),\" or \",(0,n.jsx)(e.code,{children:\"inset\"}),\" by setting the \",(0,n.jsx)(e.code,{children:\"intent\"}),\" prop.\"]}),`\n`,(0,n.jsx)(s,{fullscreenUrl:\"/blocks/navbar/navbar-01\",source:{preview:\"blocks/navbar/navbar-01/app-navbar\",\"page.tsx\":\"blocks/navbar/navbar-01/page\",\"layout.tsx\":\"blocks/navbar/navbar-01/layout\",\"app-navbar.tsx\":\"blocks/navbar/navbar-01/app-navbar\"}}),`\n`,(0,n.jsx)(e.h3,{id:\"floating\",children:\"Floating\"}),`\n`,(0,n.jsx)(e.p,{children:\"The floating intent will have a border inside the navbar itself, the wrapper will have a padding to the content.\"}),`\n`,(0,n.jsx)(s,{fullscreenUrl:\"/blocks/navbar/navbar-02\",source:{preview:\"blocks/navbar/navbar-02/app-navbar\",\"page.tsx\":\"blocks/navbar/navbar-02/page\",\"layout.tsx\":\"blocks/navbar/navbar-02/layout\",\"app-navbar.tsx\":\"blocks/navbar/navbar-02/app-navbar\"}}),`\n`,(0,n.jsx)(e.h3,{id:\"inset\",children:\"Inset\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The inset one will have the padding to inset main content. You can of course see what's going on the demo, but you can also see the \",(0,n.jsx)(e.a,{href:\"/blocks/navbar/navbar-03\",children:\"live example here\"}),\".\"]}),`\n`,(0,n.jsx)(s,{fullscreenUrl:\"/blocks/navbar/navbar-03\",source:{preview:\"blocks/navbar/navbar-03/app-navbar\",\"page.tsx\":\"blocks/navbar/navbar-03/page\",\"layout.tsx\":\"blocks/navbar/navbar-03/layout\",\"app-navbar.tsx\":\"blocks/navbar/navbar-03/app-navbar\"}}),`\n`,(0,n.jsx)(e.h2,{id:\"using-the-layout\",children:\"Using the Layout\"}),`\n`,(0,n.jsx)(e.p,{children:\"There are several ways to use the layout, depending on your framework. Or, if you're not using any framework, you can simply apply the layout component.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"common-usage\",children:\"Common Usage\"}),`\n`,(0,n.jsx)(e.p,{children:\"A typical approach is to wrap your content with the layout like this:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsxs)(e.code,{children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"<AppLayout>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  {/* your main content */}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"</AppLayout>\"})})]})}),`\n`,(0,n.jsx)(e.h3,{id:\"inertiajs\",children:\"Inertia.js\"}),`\n`,(0,n.jsx)(e.p,{children:\"If you're using Inertia.js, you can implement a persistent layout. Here's how it looks:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsx)(e.code,{children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"Home.layout = (page: React.ReactNode) => <AppLayout children={page} />\"})})})}),`\n`,(0,n.jsx)(e.h3,{id:\"nextjs\",children:\"Next.js\"}),`\n`,(0,n.jsx)(e.p,{children:\"If you're using Next.js, there's no extra configuration needed. Simply create a page component and ensure it inherits the layout like this:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"m 4,4 a 1,1 0 0 0 -0.7070312,0.2929687 1,1 0 0 0 0,1.4140625 L 8.5859375,11 3.2929688,16.292969 a 1,1 0 0 0 0,1.414062 1,1 0 0 0 1.4140624,0 l 5.9999998,-6 a 1.0001,1.0001 0 0 0 0,-1.414062 L 4.7070312,4.2929687 A 1,1 0 0 0 4,4 Z m 8,14 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 8 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z\" fill=\"currentColor\" /></svg>',children:(0,n.jsxs)(e.code,{children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{\"--shiki-light\":\"#6F42C1\",\"--shiki-dark\":\"#B392F0\"},children:\"app/\"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{\"--shiki-light\":\"#6F42C1\",\"--shiki-dark\":\"#B392F0\"},children:\"\\u251C\\u2500\\u2500\"}),(0,n.jsx)(e.span,{style:{\"--shiki-light\":\"#032F62\",\"--shiki-dark\":\"#9ECBFF\"},children:\" app-navbar.tsx\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{\"--shiki-light\":\"#6F42C1\",\"--shiki-dark\":\"#B392F0\"},children:\"\\u251C\\u2500\\u2500\"}),(0,n.jsx)(e.span,{style:{\"--shiki-light\":\"#032F62\",\"--shiki-dark\":\"#9ECBFF\"},children:\" layout.tsx\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{\"--shiki-light\":\"#6F42C1\",\"--shiki-dark\":\"#B392F0\"},children:\"\\u2514\\u2500\\u2500\"}),(0,n.jsx)(e.span,{style:{\"--shiki-light\":\"#032F62\",\"--shiki-dark\":\"#9ECBFF\"},children:\" page.tsx\"})]})]})}),`\n`,(0,n.jsx)(e.h2,{id:\"logo\",children:\"Logo\"}),`\n`,(0,n.jsx)(e.p,{children:\"The logo is typically the first item in the navbar, usually representing the brand or company.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsxs)(e.code,{children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"<Navbar>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  <Navbar.Nav>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'    <Navbar.Logo href=\"#\">'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'      <IconBrandApple className=\"size-5\" />'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    </Navbar.Logo>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    <Navbar.Section>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'      <Navbar.Item href=\"#\">Store</Navbar.Item>'})})]})}),`\n`,(0,n.jsx)(e.h2,{id:\"current\",children:\"Current\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Highlight the current page in the navbar for better navigation clarity by setting the \",(0,n.jsx)(e.code,{children:\"isCurrent\"}),\" prop to \",(0,n.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsx)(e.code,{children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'<Navbar.Item isCurrent href=\"#\"/>'})})})}),`\n`,(0,n.jsx)(e.h2,{id:\"sticky\",children:\"Sticky\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You also make the navbar sticky by setting the \",(0,n.jsx)(e.code,{children:\"isSticky\"}),\" prop to \",(0,n.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsx)(e.code,{children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"<Navbar isSticky />\"})})})}),`\n`,(0,n.jsx)(e.h2,{id:\"using-icons\",children:\"Using Icons\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you'd like to use icons on the navbar items, that's no problem at all. The navbar is already designed and optimized to accommodate icons seamlessly. First of all, you need to install the \",(0,n.jsx)(e.code,{children:\"justd-icons\"}),\" package.\"]}),`\n`,(0,n.jsx)(t,{className:\"mb-6\",options:{isManual:!1},items:[\"justd-icons\"]}),`\n`,(0,n.jsx)(s,{fullscreenUrl:\"/blocks/navbar/navbar-05\",source:{preview:\"blocks/navbar/navbar-05/app-navbar\",\"page.tsx\":\"blocks/navbar/navbar-05/page\",\"layout.tsx\":\"blocks/navbar/navbar-05/layout\",\"app-navbar.tsx\":\"blocks/navbar/navbar-05/app-navbar\"}}),`\n`,(0,n.jsx)(e.h2,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,n.jsx)(e.p,{children:\"Disable individual navbar items when needed.\"}),`\n`,(0,n.jsx)(s,{fullscreenUrl:\"/blocks/navbar/navbar-04\",source:{preview:\"blocks/navbar/navbar-04/app-navbar\",\"page.tsx\":\"blocks/navbar/navbar-04/page\",\"layout.tsx\":\"blocks/navbar/navbar-04/layout\",\"app-navbar.tsx\":\"blocks/navbar/navbar-04/app-navbar\"}}),`\n`,(0,n.jsx)(e.h2,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"On mobile devices, the navbar is hidden by default. You can open it using \",(0,n.jsx)(e.code,{children:\"Navbar.Trigger\"}),\", but there are times when you might want to manage its state by clicking one of the links within the navbar. You can achieve this because it shares the sheet properties, specifically \",(0,n.jsx)(e.code,{children:\"isOpen\"}),\" and \",(0,n.jsx)(e.code,{children:\"onOpenChange\"}),\". There are multiple ways to control the state, but the simplest method is to listen for path changes and set \",(0,n.jsx)(e.code,{children:\"isOpen\"}),\" to \",(0,n.jsx)(e.code,{children:\"true\"}),\" or \",(0,n.jsx)(e.code,{children:\"false\"}),\" accordingly.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"inertiajs-1\",children:\"Inertia.js\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"When you are using inertia.js, you can listen the path by using \",(0,n.jsx)(e.code,{children:\"usePage\"}),\" hooks. If you're not sure, you can always see the real example here at \",(0,n.jsx)(e.a,{href:\"https://github.com/justdlabs/inertia.ts\",children:\"starter kit inertia.js\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsxs)(e.code,{children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"import { usePage } from '@inertiajs/react';\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function AppNavbar({ children, ...props }: React.ComponentProps<typeof Navbar>) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const page = usePage();\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const [isOpen, setIsOpen] = React.useState(false);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  React.useEffect(() => setIsOpen(false), [page.url]);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return (\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    <Navbar isOpen={isOpen} onOpenChange={setIsOpen} {...props}/>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})}),`\n`,(0,n.jsx)(e.h3,{id:\"nextjs-1\",children:\"Next.js\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"On next.js, you can listen the path by using \",(0,n.jsx)(e.code,{children:\"usePathname\"}),\" hooks. If you're not sure, you can always see the real example here at \",(0,n.jsx)(e.a,{href:\"https://github.com/justdlabs/next.js\",children:\"starter kit next.js\"}),\". or see live example \",(0,n.jsx)(e.a,{href:\"/blocks/navbar/navbar-01\",children:\"here\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsxs)(e.code,{children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { usePathname } from \"next/navigation\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function AppNavbar({ children, ...props }: React.ComponentProps<typeof Navbar>) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const pathname = usePathname();\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const [isOpen, setIsOpen] = React.useState(false);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  React.useEffect(() => setIsOpen(false), [pathname]);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return (\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    <Navbar isOpen={isOpen} onOpenChange={setIsOpen} {...props}>\"})})]})})]})}function u(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(v,{...a})}):v(a)}function l(a,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return w(I);})();\n;return Component;"}
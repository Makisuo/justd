{"content":"## Basic\n\nThe basic multiple select component lets you select multiple options from a list. It displays selected options with Tag components.\n<How toUse=\"pickers/multiple-select/multiple-select-demo\" />\n\n## Installation\n<Installation options={{ isComponent: true }} items={['multiple-select']} />\n\n## Composed Components\n<Composed components={['field', 'list-box', 'popover', 'tag-group', 'visually-hidden']} />\n\n## Manual Installation\n<Installation options={{ isManual: true }} items={['react-aria-components', 'react-aria', 'justd-icons']} />\n\n<SourceCode toShow={['multiple-select']} />\n\n## Anatomy\n<Anatomy show='multiple-select-anatomy'/>\n\n## Intent\n\nBy default, the multiple select component uses the `primary` intent. But it has a `secondary` intent as well.\n\n<How minW72 toUse=\"pickers/multiple-select/multiple-select-intent-demo\" />\n\n## Shape\n\nCustomize the tag field’s shape using the `shape` prop.\n\n<How minW72 toUse=\"pickers/multiple-select/multiple-select-shape-demo\" />\n\n## Controlled\nThis component lets you select tags dynamically, updating the list with callbacks on add and remove. It displays selected tags with Tag components and logs each action.\n<How toUse=\"pickers/multiple-select/multiple-select-controlled-demo\" />\n\n## Invalid\nWhen the component is invalid, it displays an error message.\n<How toUse=\"pickers/multiple-select/multiple-select-invalid-demo\" />\n\n## Disabled\nWhen the component is disabled, it prevents the user from adding or removing tags.\n<How toUse=\"pickers/multiple-select/multiple-select-disabled-demo\" />\n\n## Props\nHere's the fixed table:\n\n| Prop           | Type                        | Default   | Description                                  |\n|----------------|-----------------------------|-----------|----------------------------------------------|\n| label          | string                      | -         | The label of the tag field                   |\n| description    | string                      | -         | The description of the tag field             |\n| placeholder    | string                      | -         | The placeholder of the tag field             |\n| className      | string                      | -         | The class name of the tag field              |\n| name           | string                      | -         | The name of the tag field                    |\n| list           | ListData                    | -         | The list of tags                             |\n| onItemInserted | (tag: TagItemProps) => void | -         | The callback function when a tag is inserted |\n| onItemCleared  | (tag: TagItemProps) => void | -         | The callback function when a tag is cleared  |\n| isDisabled     | boolean                     | -         | The disabled state of the tag field          |\n| intent         | string                      | 'primary' | 'primary', 'secondary'                       |\n| shape          | string                      | 'square'  | 'square', 'circle'                           |","title":"Multiple Select","description":"Multiple select lets you pick more than one option from a list. It's like checking off items on your to-do list just click, click, click, and you're good to go!","_meta":{"filePath":"components/pickers/multiple-select.mdx","fileName":"multiple-select.mdx","directory":"components/pickers","extension":"mdx","path":"components/pickers/multiple-select"},"toc":[{"title":"Basic","url":"#basic","depth":2},{"title":"Installation","url":"#installation","depth":2},{"title":"Composed Components","url":"#composed-components","depth":2},{"title":"Manual Installation","url":"#manual-installation","depth":2},{"title":"Anatomy","url":"#anatomy","depth":2},{"title":"Intent","url":"#intent","depth":2},{"title":"Shape","url":"#shape","depth":2},{"title":"Controlled","url":"#controlled","depth":2},{"title":"Invalid","url":"#invalid","depth":2},{"title":"Disabled","url":"#disabled","depth":2},{"title":"Props","url":"#props","depth":2}],"structuredData":{"contents":[{"heading":"basic","content":"The basic multiple select component lets you select multiple options from a list. It displays selected options with Tag components."},{"heading":"intent","content":"By default, the multiple select component uses the primary intent. But it has a secondary intent as well."},{"heading":"shape","content":"Customize the tag field’s shape using the shape prop."},{"heading":"controlled","content":"This component lets you select tags dynamically, updating the list with callbacks on add and remove. It displays selected tags with Tag components and logs each action."},{"heading":"invalid","content":"When the component is invalid, it displays an error message."},{"heading":"disabled","content":"When the component is disabled, it prevents the user from adding or removing tags."},{"heading":"props","content":"Here's the fixed table:"},{"heading":"props","content":"Prop"},{"heading":"props","content":"Type"},{"heading":"props","content":"Default"},{"heading":"props","content":"Description"},{"heading":"props","content":"label"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The label of the tag field"},{"heading":"props","content":"description"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The description of the tag field"},{"heading":"props","content":"placeholder"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The placeholder of the tag field"},{"heading":"props","content":"className"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The class name of the tag field"},{"heading":"props","content":"name"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The name of the tag field"},{"heading":"props","content":"list"},{"heading":"props","content":"ListData"},{"heading":"props","content":"-"},{"heading":"props","content":"The list of tags"},{"heading":"props","content":"onItemInserted"},{"heading":"props","content":"(tag: TagItemProps) => void"},{"heading":"props","content":"-"},{"heading":"props","content":"The callback function when a tag is inserted"},{"heading":"props","content":"onItemCleared"},{"heading":"props","content":"(tag: TagItemProps) => void"},{"heading":"props","content":"-"},{"heading":"props","content":"The callback function when a tag is cleared"},{"heading":"props","content":"isDisabled"},{"heading":"props","content":"boolean"},{"heading":"props","content":"-"},{"heading":"props","content":"The disabled state of the tag field"},{"heading":"props","content":"intent"},{"heading":"props","content":"string"},{"heading":"props","content":"'primary'"},{"heading":"props","content":"'primary', 'secondary'"},{"heading":"props","content":"shape"},{"heading":"props","content":"string"},{"heading":"props","content":"'square'"},{"heading":"props","content":"'square', 'circle'"}],"headings":[{"id":"basic","content":"Basic"},{"id":"installation","content":"Installation"},{"id":"composed-components","content":"Composed Components"},{"id":"manual-installation","content":"Manual Installation"},{"id":"anatomy","content":"Anatomy"},{"id":"intent","content":"Intent"},{"id":"shape","content":"Shape"},{"id":"controlled","content":"Controlled"},{"id":"invalid","content":"Invalid"},{"id":"disabled","content":"Disabled"},{"id":"props","content":"Props"}]},"body":"var Component=(()=>{var g=Object.create;var c=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var w=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),I=(n,e)=>{for(var d in e)c(n,d,{get:e[d],enumerable:!0})},s=(n,e,d,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of y(e))!T.call(n,i)&&i!==d&&c(n,i,{get:()=>e[i],enumerable:!(l=f(e,i))||l.enumerable});return n};var v=(n,e,d)=>(d=n!=null?g(b(n)):{},s(e||!n||!n.__esModule?c(d,\"default\",{value:n,enumerable:!0}):d,n)),x=n=>s(c({},\"__esModule\",{value:!0}),n);var p=w((_,a)=>{a.exports=_jsx_runtime});var C={};I(C,{default:()=>u});var t=v(p());function m(n){let e={code:\"code\",h2:\"h2\",p:\"p\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",...n.components},{Anatomy:d,Composed:l,How:i,Installation:o,SourceCode:h}=e;return d||r(\"Anatomy\",!0),l||r(\"Composed\",!0),i||r(\"How\",!0),o||r(\"Installation\",!0),h||r(\"SourceCode\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:\"basic\",children:\"Basic\"}),`\n`,(0,t.jsx)(e.p,{children:\"The basic multiple select component lets you select multiple options from a list. It displays selected options with Tag components.\"}),`\n`,(0,t.jsx)(i,{toUse:\"pickers/multiple-select/multiple-select-demo\"}),`\n`,(0,t.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,t.jsx)(o,{options:{isComponent:!0},items:[\"multiple-select\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"composed-components\",children:\"Composed Components\"}),`\n`,(0,t.jsx)(l,{components:[\"field\",\"list-box\",\"popover\",\"tag-group\",\"visually-hidden\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"manual-installation\",children:\"Manual Installation\"}),`\n`,(0,t.jsx)(o,{options:{isManual:!0},items:[\"react-aria-components\",\"react-aria\",\"justd-icons\"]}),`\n`,(0,t.jsx)(h,{toShow:[\"multiple-select\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"anatomy\",children:\"Anatomy\"}),`\n`,(0,t.jsx)(d,{show:\"multiple-select-anatomy\"}),`\n`,(0,t.jsx)(e.h2,{id:\"intent\",children:\"Intent\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"By default, the multiple select component uses the \",(0,t.jsx)(e.code,{children:\"primary\"}),\" intent. But it has a \",(0,t.jsx)(e.code,{children:\"secondary\"}),\" intent as well.\"]}),`\n`,(0,t.jsx)(i,{minW72:!0,toUse:\"pickers/multiple-select/multiple-select-intent-demo\"}),`\n`,(0,t.jsx)(e.h2,{id:\"shape\",children:\"Shape\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Customize the tag field\\u2019s shape using the \",(0,t.jsx)(e.code,{children:\"shape\"}),\" prop.\"]}),`\n`,(0,t.jsx)(i,{minW72:!0,toUse:\"pickers/multiple-select/multiple-select-shape-demo\"}),`\n`,(0,t.jsx)(e.h2,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,t.jsx)(e.p,{children:\"This component lets you select tags dynamically, updating the list with callbacks on add and remove. It displays selected tags with Tag components and logs each action.\"}),`\n`,(0,t.jsx)(i,{toUse:\"pickers/multiple-select/multiple-select-controlled-demo\"}),`\n`,(0,t.jsx)(e.h2,{id:\"invalid\",children:\"Invalid\"}),`\n`,(0,t.jsx)(e.p,{children:\"When the component is invalid, it displays an error message.\"}),`\n`,(0,t.jsx)(i,{toUse:\"pickers/multiple-select/multiple-select-invalid-demo\"}),`\n`,(0,t.jsx)(e.h2,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,t.jsx)(e.p,{children:\"When the component is disabled, it prevents the user from adding or removing tags.\"}),`\n`,(0,t.jsx)(i,{toUse:\"pickers/multiple-select/multiple-select-disabled-demo\"}),`\n`,(0,t.jsx)(e.h2,{id:\"props\",children:\"Props\"}),`\n`,(0,t.jsx)(e.p,{children:\"Here's the fixed table:\"}),`\n`,(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Prop\"}),(0,t.jsx)(e.th,{children:\"Type\"}),(0,t.jsx)(e.th,{children:\"Default\"}),(0,t.jsx)(e.th,{children:\"Description\"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"label\"}),(0,t.jsx)(e.td,{children:\"string\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The label of the tag field\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"description\"}),(0,t.jsx)(e.td,{children:\"string\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The description of the tag field\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"placeholder\"}),(0,t.jsx)(e.td,{children:\"string\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The placeholder of the tag field\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"className\"}),(0,t.jsx)(e.td,{children:\"string\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The class name of the tag field\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"name\"}),(0,t.jsx)(e.td,{children:\"string\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The name of the tag field\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"list\"}),(0,t.jsx)(e.td,{children:\"ListData\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The list of tags\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"onItemInserted\"}),(0,t.jsx)(e.td,{children:\"(tag: TagItemProps) => void\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The callback function when a tag is inserted\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"onItemCleared\"}),(0,t.jsx)(e.td,{children:\"(tag: TagItemProps) => void\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The callback function when a tag is cleared\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"isDisabled\"}),(0,t.jsx)(e.td,{children:\"boolean\"}),(0,t.jsx)(e.td,{children:\"-\"}),(0,t.jsx)(e.td,{children:\"The disabled state of the tag field\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"intent\"}),(0,t.jsx)(e.td,{children:\"string\"}),(0,t.jsx)(e.td,{children:\"'primary'\"}),(0,t.jsx)(e.td,{children:\"'primary', 'secondary'\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"shape\"}),(0,t.jsx)(e.td,{children:\"string\"}),(0,t.jsx)(e.td,{children:\"'square'\"}),(0,t.jsx)(e.td,{children:\"'square', 'circle'\"})]})]})]})]})}function u(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(m,{...n})}):m(n)}function r(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(C);})();\n;return Component;"}
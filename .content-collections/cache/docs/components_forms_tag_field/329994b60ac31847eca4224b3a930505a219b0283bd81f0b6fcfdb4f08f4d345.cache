{"content":"## Basic\n\nThe basic tag field lets you add tags to your content.\n\n<How minW72 toUse=\"forms/tag-field/tag-field-demo\" />\n\n## Installation\n\nTo install, run the following command:\n\n<Installation options={{ isComponent: true }} items={['tag-field']} />\n\n## Composed Components\n\nThis tag field integrates with components like:\n\n<Composed components={['field', 'tag-group']} />\n\n## Manual Installation\n\nFor manual installation, use:\n\n<Installation options={{ isManual: true }} items={['react-aria-components']} />\n\n<SourceCode toShow={['tag-field']} />\n\n## Anatomy\nImport the components and use them as shown below, adapting the structure to fit each component.\n```\nimport { TagField } from 'ui'\n\nconst selectedItems = useListData({\n  initialItems: [\n    {\n      id: 1,\n      name: \"Laravel\"\n    },\n    // ...\n  ]\n})\n\n<TagField className=\"max-w-xs\" label=\"Add tag\" list={selectedItems} />\n```\n\n## Appearance\n\nCustomize the tag field’s appearance using the `appearance` prop.\n\n<How isCenter={false} withNoPadding toUse=\"forms/tag-field/tag-field-appearance-demo\" />\n\n## Max Entry\n\nSet a limit on the number of tags that can be added.\n\n<How minW72 toUse=\"forms/tag-field/tag-field-max-demo\" />\n\n## Intent\n\nBy default, the tag field component uses the `primary` intent. But it has a `secondary` intent as well.\n\n<How minW72 toUse=\"forms/tag-field/tag-field-intent-demo\" />\n\n## Shape\n\nCustomize the tag field’s shape using the `shape` prop.\n\n<How minW72 toUse=\"forms/tag-field/tag-field-shape-demo\" />\n\n## Controlled\n\nThe tag field is controlled by default. This example demonstrates how to access its value.\n\n<How minW72 toUse=\"forms/tag-field/tag-field-controlled-demo\" />\n\n\n## Disabled\n\nDisable the tag field by using the `isDisabled` prop.\n\n<How toUse=\"forms/tag-field/tag-field-disabled-demo\" />\n\n## Props\nHere's the fixed table:\n\n| Prop           | Type                        | Default   | Description                                  |\n|----------------|-----------------------------|-----------|----------------------------------------------|\n| label          | string                      | -         | The label of the tag field                   |\n| description    | string                      | -         | The description of the tag field             |\n| placeholder    | string                      | -         | The placeholder of the tag field             |\n| max            | number                      | -         | The maximum number of tags that can be added |\n| className      | string                      | -         | The class name of the tag field              |\n| name           | string                      | -         | The name of the tag field                    |\n| list           | ListData                    | -         | The list of tags                             |\n| onItemInserted | (tag: TagItemProps) => void | -         | The callback function when a tag is inserted |\n| onItemCleared  | (tag: TagItemProps) => void | -         | The callback function when a tag is cleared  |\n| isDisabled     | boolean                     | -         | The disabled state of the tag field          |\n| intent         | string                      | 'primary' | 'primary', 'secondary'                       |\n| shape          | string                      | 'square'  | 'square', 'circle'                           |","title":"Tag Field","description":"A tag field lets users add labels to items for categorization. They can type, select from a list, or create new tags as needed.","_meta":{"filePath":"components/forms/tag-field.mdx","fileName":"tag-field.mdx","directory":"components/forms","extension":"mdx","path":"components/forms/tag-field"},"toc":[{"title":"Basic","url":"#basic","depth":2},{"title":"Installation","url":"#installation","depth":2},{"title":"Composed Components","url":"#composed-components","depth":2},{"title":"Manual Installation","url":"#manual-installation","depth":2},{"title":"Anatomy","url":"#anatomy","depth":2},{"title":"Appearance","url":"#appearance","depth":2},{"title":"Max Entry","url":"#max-entry","depth":2},{"title":"Intent","url":"#intent","depth":2},{"title":"Shape","url":"#shape","depth":2},{"title":"Controlled","url":"#controlled","depth":2},{"title":"Disabled","url":"#disabled","depth":2},{"title":"Props","url":"#props","depth":2}],"structuredData":{"contents":[{"heading":"basic","content":"The basic tag field lets you add tags to your content."},{"heading":"installation","content":"To install, run the following command:"},{"heading":"composed-components","content":"This tag field integrates with components like:"},{"heading":"manual-installation","content":"For manual installation, use:"},{"heading":"anatomy","content":"Import the components and use them as shown below, adapting the structure to fit each component."},{"heading":"appearance","content":"Customize the tag field’s appearance using the appearance prop."},{"heading":"max-entry","content":"Set a limit on the number of tags that can be added."},{"heading":"intent","content":"By default, the tag field component uses the primary intent. But it has a secondary intent as well."},{"heading":"shape","content":"Customize the tag field’s shape using the shape prop."},{"heading":"controlled","content":"The tag field is controlled by default. This example demonstrates how to access its value."},{"heading":"disabled","content":"Disable the tag field by using the isDisabled prop."},{"heading":"props","content":"Here's the fixed table:"},{"heading":"props","content":"Prop"},{"heading":"props","content":"Type"},{"heading":"props","content":"Default"},{"heading":"props","content":"Description"},{"heading":"props","content":"label"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The label of the tag field"},{"heading":"props","content":"description"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The description of the tag field"},{"heading":"props","content":"placeholder"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The placeholder of the tag field"},{"heading":"props","content":"max"},{"heading":"props","content":"number"},{"heading":"props","content":"-"},{"heading":"props","content":"The maximum number of tags that can be added"},{"heading":"props","content":"className"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The class name of the tag field"},{"heading":"props","content":"name"},{"heading":"props","content":"string"},{"heading":"props","content":"-"},{"heading":"props","content":"The name of the tag field"},{"heading":"props","content":"list"},{"heading":"props","content":"ListData"},{"heading":"props","content":"-"},{"heading":"props","content":"The list of tags"},{"heading":"props","content":"onItemInserted"},{"heading":"props","content":"(tag: TagItemProps) => void"},{"heading":"props","content":"-"},{"heading":"props","content":"The callback function when a tag is inserted"},{"heading":"props","content":"onItemCleared"},{"heading":"props","content":"(tag: TagItemProps) => void"},{"heading":"props","content":"-"},{"heading":"props","content":"The callback function when a tag is cleared"},{"heading":"props","content":"isDisabled"},{"heading":"props","content":"boolean"},{"heading":"props","content":"-"},{"heading":"props","content":"The disabled state of the tag field"},{"heading":"props","content":"intent"},{"heading":"props","content":"string"},{"heading":"props","content":"'primary'"},{"heading":"props","content":"'primary', 'secondary'"},{"heading":"props","content":"shape"},{"heading":"props","content":"string"},{"heading":"props","content":"'square'"},{"heading":"props","content":"'square', 'circle'"}],"headings":[{"id":"basic","content":"Basic"},{"id":"installation","content":"Installation"},{"id":"composed-components","content":"Composed Components"},{"id":"manual-installation","content":"Manual Installation"},{"id":"anatomy","content":"Anatomy"},{"id":"appearance","content":"Appearance"},{"id":"max-entry","content":"Max Entry"},{"id":"intent","content":"Intent"},{"id":"shape","content":"Shape"},{"id":"controlled","content":"Controlled"},{"id":"disabled","content":"Disabled"},{"id":"props","content":"Props"}]},"body":"var Component=(()=>{var f=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),T=(t,e)=>{for(var i in e)r(t,i,{get:e[i],enumerable:!0})},c=(t,e,i,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of u(e))!y.call(t,l)&&l!==i&&r(t,l,{get:()=>e[l],enumerable:!(d=g(e,l))||d.enumerable});return t};var C=(t,e,i)=>(i=t!=null?f(b(t)):{},c(e||!t||!t.__esModule?r(i,\"default\",{value:t,enumerable:!0}):i,t)),w=t=>c(r({},\"__esModule\",{value:!0}),t);var o=x((k,s)=>{s.exports=_jsx_runtime});var N={};T(N,{default:()=>m});var n=C(o());function p(t){let e={code:\"code\",h2:\"h2\",p:\"p\",pre:\"pre\",span:\"span\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",...t.components},{Composed:i,How:d,Installation:l,SourceCode:h}=e;return i||a(\"Composed\",!0),d||a(\"How\",!0),l||a(\"Installation\",!0),h||a(\"SourceCode\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:\"basic\",children:\"Basic\"}),`\n`,(0,n.jsx)(e.p,{children:\"The basic tag field lets you add tags to your content.\"}),`\n`,(0,n.jsx)(d,{minW72:!0,toUse:\"forms/tag-field/tag-field-demo\"}),`\n`,(0,n.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,n.jsx)(e.p,{children:\"To install, run the following command:\"}),`\n`,(0,n.jsx)(l,{options:{isComponent:!0},items:[\"tag-field\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"composed-components\",children:\"Composed Components\"}),`\n`,(0,n.jsx)(e.p,{children:\"This tag field integrates with components like:\"}),`\n`,(0,n.jsx)(i,{components:[\"field\",\"tag-group\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"manual-installation\",children:\"Manual Installation\"}),`\n`,(0,n.jsx)(e.p,{children:\"For manual installation, use:\"}),`\n`,(0,n.jsx)(l,{options:{isManual:!0},items:[\"react-aria-components\"]}),`\n`,(0,n.jsx)(h,{toShow:[\"tag-field\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"anatomy\",children:\"Anatomy\"}),`\n`,(0,n.jsx)(e.p,{children:\"Import the components and use them as shown below, adapting the structure to fit each component.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"shiki shiki-themes github-light github-dark\",style:{\"--shiki-light\":\"#24292e\",\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light-bg\":\"#fff\",\"--shiki-dark-bg\":\"#24292e\"},tabIndex:\"0\",icon:'<svg viewBox=\"0 0 24 24\"><path d=\"M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z\" fill=\"currentColor\" /></svg>',children:(0,n.jsxs)(e.code,{children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"import { TagField } from 'ui'\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const selectedItems = useListData({\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  initialItems: [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      id: 1,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'      name: \"Laravel\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    // ...\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  ]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"})\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'<TagField className=\"max-w-xs\" label=\"Add tag\" list={selectedItems} />'})})]})}),`\n`,(0,n.jsx)(e.h2,{id:\"appearance\",children:\"Appearance\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Customize the tag field\\u2019s appearance using the \",(0,n.jsx)(e.code,{children:\"appearance\"}),\" prop.\"]}),`\n`,(0,n.jsx)(d,{isCenter:!1,withNoPadding:!0,toUse:\"forms/tag-field/tag-field-appearance-demo\"}),`\n`,(0,n.jsx)(e.h2,{id:\"max-entry\",children:\"Max Entry\"}),`\n`,(0,n.jsx)(e.p,{children:\"Set a limit on the number of tags that can be added.\"}),`\n`,(0,n.jsx)(d,{minW72:!0,toUse:\"forms/tag-field/tag-field-max-demo\"}),`\n`,(0,n.jsx)(e.h2,{id:\"intent\",children:\"Intent\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"By default, the tag field component uses the \",(0,n.jsx)(e.code,{children:\"primary\"}),\" intent. But it has a \",(0,n.jsx)(e.code,{children:\"secondary\"}),\" intent as well.\"]}),`\n`,(0,n.jsx)(d,{minW72:!0,toUse:\"forms/tag-field/tag-field-intent-demo\"}),`\n`,(0,n.jsx)(e.h2,{id:\"shape\",children:\"Shape\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Customize the tag field\\u2019s shape using the \",(0,n.jsx)(e.code,{children:\"shape\"}),\" prop.\"]}),`\n`,(0,n.jsx)(d,{minW72:!0,toUse:\"forms/tag-field/tag-field-shape-demo\"}),`\n`,(0,n.jsx)(e.h2,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,n.jsx)(e.p,{children:\"The tag field is controlled by default. This example demonstrates how to access its value.\"}),`\n`,(0,n.jsx)(d,{minW72:!0,toUse:\"forms/tag-field/tag-field-controlled-demo\"}),`\n`,(0,n.jsx)(e.h2,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Disable the tag field by using the \",(0,n.jsx)(e.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`,(0,n.jsx)(d,{toUse:\"forms/tag-field/tag-field-disabled-demo\"}),`\n`,(0,n.jsx)(e.h2,{id:\"props\",children:\"Props\"}),`\n`,(0,n.jsx)(e.p,{children:\"Here's the fixed table:\"}),`\n`,(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:\"Prop\"}),(0,n.jsx)(e.th,{children:\"Type\"}),(0,n.jsx)(e.th,{children:\"Default\"}),(0,n.jsx)(e.th,{children:\"Description\"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"label\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The label of the tag field\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"description\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The description of the tag field\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"placeholder\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The placeholder of the tag field\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"max\"}),(0,n.jsx)(e.td,{children:\"number\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The maximum number of tags that can be added\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"className\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The class name of the tag field\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"name\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The name of the tag field\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"list\"}),(0,n.jsx)(e.td,{children:\"ListData\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The list of tags\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"onItemInserted\"}),(0,n.jsx)(e.td,{children:\"(tag: TagItemProps) => void\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The callback function when a tag is inserted\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"onItemCleared\"}),(0,n.jsx)(e.td,{children:\"(tag: TagItemProps) => void\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The callback function when a tag is cleared\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"isDisabled\"}),(0,n.jsx)(e.td,{children:\"boolean\"}),(0,n.jsx)(e.td,{children:\"-\"}),(0,n.jsx)(e.td,{children:\"The disabled state of the tag field\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"intent\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsx)(e.td,{children:\"'primary'\"}),(0,n.jsx)(e.td,{children:\"'primary', 'secondary'\"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"shape\"}),(0,n.jsx)(e.td,{children:\"string\"}),(0,n.jsx)(e.td,{children:\"'square'\"}),(0,n.jsx)(e.td,{children:\"'square', 'circle'\"})]})]})]})]})}function m(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(p,{...t})}):p(t)}function a(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return w(N);})();\n;return Component;"}